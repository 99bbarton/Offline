////////////////////////////////////////////////////////////////////////
// Class:       PrescaleEvent
// Module Type: filter
// File:        PrescaleEvent_module.cc
//
// Generated at Tue Jan  6 11:52:08 2015 by John Freeman using artmod
// from cetpkgsupport v1_07_01.
////////////////////////////////////////////////////////////////////////

#include "art/Framework/Core/EDFilter.h"
#include "art/Framework/Core/ModuleMacros.h"
#include "art/Framework/Principal/Event.h"
#include "art/Framework/Principal/Handle.h"
#include "art/Framework/Principal/Run.h"
#include "art/Framework/Principal/SubRun.h"
#include "canvas/Utilities/InputTag.h"
#include "fhiclcpp/ParameterSet.h"
#include "messagefacility/MessageLogger/MessageLogger.h"

#include <memory>


class PrescaleEvent;


class PrescaleEvent : public art::EDFilter {

    public:

      explicit PrescaleEvent(fhicl::ParameterSet const & p);

      // The destructor generated by the compiler is fine for classes
      // without bare pointers or other resource use.
      // Plugins should not be copied or assigned.

      PrescaleEvent(PrescaleEvent const &) = delete;
      PrescaleEvent(PrescaleEvent &&) = delete;
      PrescaleEvent & operator = (PrescaleEvent const &) = delete;
      PrescaleEvent & operator = (PrescaleEvent &&) = delete;

      bool filter(art::Event & e) override;

    private:

      uint32_t nPrescale_;

};

PrescaleEvent::PrescaleEvent(fhicl::ParameterSet const & p)
  : nPrescale_(p.get<uint32_t>("nPrescale"))
{}

inline bool PrescaleEvent::filter(art::Event & e)
{
   return e.event() % nPrescale_ == 0 ? true : false;
}

DEFINE_ART_MODULE(PrescaleEvent)
