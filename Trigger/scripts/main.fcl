# -*- mode:tcl -*-
#------------------------------------------------------------------------------
# performs the calorimeter and track reconstruciton
#------------------------------------------------------------------------------
#  > mu2e --config CaloFilters/fcl/runGlobalFilter.fcl --source "your digis file" --TFile globalFilter.root --nevts=100
#include "fcl/minimalMessageService.fcl"
#include "fcl/standardServices.fcl"
#include "fcl/standardProducers.fcl"

#include "Trigger/fcl/templates.fcl"

process_name : globalTrigger

source :
{
    module_type : RootInput
}
# we don't need any simulation services for this job
# services : @local::Services.Reco

services : @local::Services.SimAndReco

# timing information
services.TimeTracker : {
    dbOutput : {
	filename : ""
#	filename : "runGlobalTrigger.db" #uncomment to create the .db output
	overwrite : true
    }
}

services.scheduler.wantSummary: true

producers    : { @table::Trigger.producers }
filters      : { @table::Trigger.filters   }
analyzers    : { @table::Trigger.analyzers }
paths        : { @table::Trigger.paths     }
outputs      : { @table::Trigger.outputs   }

physics : {
    producers : { @table::producers }

    filters   : { @table::filters }
 
    analyzers : {  

	readTriggerInfo : { @table::analyzers.ReadTriggerInfo
	    nFilters      : 35
	}
	
    }

    out       : [ readTriggerInfo ]
    end_paths : [ out ]
}

outputs : {
    @table::outputs
}


services.TFileService.fileName : "globalTrigger.root"
services.SeedService.baseSeed : 0
services.SeedService.maxUniqueEngines : 20
