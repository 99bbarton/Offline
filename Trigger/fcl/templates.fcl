# -*- mode: tcl -*-
#------------------------------------------------------------------------------
#------------------------------------------------------------------------------
#include "TrkPatRec/fcl/prolog_trigger.fcl"
#include "CalPatRec/fcl/prolog.fcl"
#include "CalPatRec/fcl/prolog_trigger.fcl"
#include "CaloCluster/fcl/prolog_trigger.fcl"
#include "TrkHitReco/fcl/prolog.fcl"
#include "TrkHitReco/fcl/prolog_trigger.fcl"
#include "TrkFilters/fcl/prolog.fcl"
#include "CaloFilters/fcl/prolog.fcl"

Trigger : {
    producers : {
	@table::CaloFilters.producers
	@table::CaloClusterFast.producers
	@table::TrkHitRecoTrigger.producers
	@table::TrkHitReco.producers
	@table::TprTrigger.producers
	@table::CprTrigger.producers
    }

    filters : {
	@table::CprTrigger.filters
	@table::CaloFilters.filters
	@table::TrkFilters.filters

	UnbiasedFilter : {
	    module_type : PrescaleEvent
	    nPrescale         : @local::UnbiasedFilters_evt_sf
	}
      }
    
    analyzers  : { 
	ReadTriggerInfo : { 
	    module_type : ReadTriggerInfo
	}
    }
    
    paths : {
	@table::CaloFilters.sequences
	@table::TrkFilters.sequences
	unbiased : [ UnbiasedFilter ]
    }
    
    outputs: {
	triggerOutput : {
	    module_type : RootOutput
	    SelectEvents   : [] 
	    outputCommands : [ "keep *_*_*_*" ]
	    fileName       : "nts.trigger.jobtype.offver.sequencer.art"
	}
    }
}