#
# $Id: SConscript,v 1.2 2010/03/19 01:13:35 kutschke Exp $
# $Author: kutschke $
# $Date: 2010/03/19 01:13:35 $
#
# Original author Rob Kutschke.
#

import os.path
Import('env')

plugin_cc = Glob('*_plugin.cc',strings=True)
non_plugin_cc = Glob('*.cc',strings=True)
for cc in plugin_cc: non_plugin_cc.remove(cc)

libname='#/lib/ConditionsService'

env._dict["LIBPATH"] += ['#/lib']
env.SharedLibrary(libname, non_plugin_cc,
	LIBS=[ 'Mu2eUtilities',
	       'DataFormatsProvenance',
	       'DataFormatsCommon',
	       'FWCoreServiceRegistry',
	       'FWCoreCatalog',
	       'FWCoreMessageLogger',
	       'FWCoreParameterSet',
	       'FWCorePluginManager',
	       'FWCoreRootAutoLibraryLoader',
	       'FWCoreUtilities',
               'HepPDT',
	       'boost_thread-gcc%s-mt'%(env.gcc_ver,),
	       'Core',
	       'Hist',
	       'Tree',
	       'RIO',
	       'Net',
	       'Reflex',
	       'Cintex',
	     ],
        )


libnm=os.path.basename(libname)
#print 'plugin_cc is', plugin_cc
#print 'non_plugin_cc is', non_plugin_cc
for cc in plugin_cc:
    libname='#/lib/'+cc[:cc.find('.cc')]
    env.SharedLibrary( libname, cc, LIBS=[ libnm ] )
