# Configuration file for NeutronRatesCounter
#  - Generate events including of background processes.
#  - Run these through G4.
#  - No event display.
#  - Form StrawHits from StepPointMC objects
#  - Write event data to an output file
#  - Save state of random numbers to the event-data output file
#
# $Id: NeutronCRV.fcl,v 1.2 2011/05/25 13:39:27 kutschke Exp $
# $Author: kutschke $
# $Date: 2011/05/25 13:39:27 $
#
# Original author Gianni Onorato.

#include "minimalMessageService.fcl"
#include "diagnostics.fcl"
#include "standardProducers.fcl"

# Give this process a name.
process_name : NeutronRatesCounter

# Read events from a file (made by Mu2eG4 example g4test_03.py)
source :
{
  module_type : RootInput
  fileNames : ["/prj/mu2e/users/kutschke/beamlineData_01.root"]
  maxEvents : 1000000
}

services :
{
  message : @local::mf_debugging

  # Adjust configuration of message logger:
  # Enable debug printout from the module instance "hitinspect",
  # and Print unlimited messages with categories ToyHitInfo and GEOM
  message.debugModules : [hitinspect]
  message.categories.ToyHitInfo.limit : -1
  message.categories.GEOM.limit       : -1
    
  TFileService :
  {
    fileName      : "NeutronRates.root"
    closeFileFase : false
  }

  RandomNumberGenerator : { }

  user :
  {
    GeometryService :
    {
      inputFile : "Analyses/test/geomCRV.txt"
    }

    ConditionsService :
    {
      conditionsfile : "Mu2eG4/test/conditions_01.txt"
    }

    G4Helper : { }

    # Uncomment to enable per module timing
    # Timing :
    # {
    #   useJobReport : true 
    # }

    # Uncomment to enable memory use profiling
    # SimpleMemoryCheck :
    # {
    #   oncePerEventMode : false 
    #   showMallocInfo   : ignoreTotal 
    #   ignoreTotal      : 5 
    # }

    # Uncomment to enable trace printout to show what the framework calls when.
    # Tracer : { } 
  }

} # close of services block

physics :
{
  producers:
  {
    # Make some generated tracks and add them to the event.
    generate:
    {
      module_type   : EventGenerator
      inputfile     : "Analyses/test/genconfigCRV.txt"
      seed          : [7789]
    }
    # Run G4 and add its hits to the event.
    g4run:
    {
      module_type          : G4
      generatorModuleLabel : generate
      seed                 : [9877]
    }
    # Form StrawHits (SH).
    # Note: In original py file, this is named makeTH, not SH
    #       But it is configured exactly as the standard makeSH
    makeTH:@local::makeSH        

    # Form CaloCrystalHits (reconstruct crystals from APDs)
    CaloCrystalHitsMaker: @local::CaloCrystalHitsMaker
    CaloCrystalHitsMaker.maxFullPrint: 201

    # Form CaloROHits (APD hits)
    CaloROHitsMaker: @local::CaloROHitsMaker
    CaloROHitsMaker.maxFullPrint: 201

    # Save state of random numbers to the event.
    randomsaver:
    {
      module_type   : RandomNumberSaver
    }

    # since looking at CRV, don't want this filter--> 
    # if no tracker or calo hits,still interesting
    #
    # filterEmpty :
    # {
    #   module_type      : FilterEmptyEvents
    #   makerModuleLabel : makeTH
    #   keepTrackOrCalo  : 0
    # }

  }

  analyzers:
  {
    # Look at the hits from G4.
    CountRates:
    {
      module_type   : NeutronCRV
      diagLevel     : @local::diagLevel
      makerModuleLabel : makeTH
      maxFullPrint  : 50
      g4ModuleLabel : g4run
      minimumEnergy   : 0.000
    }
  }

  p1 : [generate, g4run]
  e1 : [CountRates, outfile ]
 
  # Tell the system to execute all paths.
  # p1 : [randomsaver
  #      ,generate
  #      ,makeTH
  #      ,CaloROHitsMaker
  #      ,CaloCrystalHitsMaker
  #      ,filterEmpty
  #      ]
  # e1 : [CountRates, filterEmpty, outfile]

  trigger_paths  : [p1]
  end_paths      : [e1]

}

outputs:
{
  # Define the output file.
  outfile : 
  {
    module_type    : RootOutput
    filename       : "NeutronCRVData.root"
    outputCommands : [ 'keep *_*_*_*'
                     , 'drop mu2ePointTrajectoryMapVector_*_*_*'
		   # , 'drop mu2eSimParticles_*_*_*'
		   # Uncomment the above line to reduce file size.
                     ]  
  }
}


