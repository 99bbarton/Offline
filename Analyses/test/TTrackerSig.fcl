# Configuration file for BkgRatesCounter
#  - Generate events including of background processes.
#  - Run these through G4.
#  - No event display.
#  - Form StrawHits from StepPointMC objects
#  - Write event data to an output file
#  - Save state of random numbers to the event-data output file
#
# $Id: TTrackerSig.fcl,v 1.1 2013/04/03 22:18:48 tassiell Exp $
# $Author: tassiell $
# $Date: 2013/04/03 22:18:48 $
#
# Original author Gianni Onorato.

#include "minimalMessageService.fcl"
#include "standardProducers.fcl"
#include "standardServices.fcl"

# Give this process a name.
process_name : TTrackerSig

# Start each new event with an empty event.
source :
{
#  module_type : EmptyEvent
  module_type : RootInput
#  maxEvents : 100
}

services :
{
  message : @local::default_message

  TFileService :
  {
    fileName      : "TTSig.root"
  }

  RandomNumberGenerator : { }

  user :
  {

    //GeometryService   : { inputFile : "Mu2eG4/test/geom_01.txt" }
    GeometryService   : { inputFile : "myConfigsTT/geom_tt3.txt" }

    ConditionsService :
    {
      conditionsfile : "Mu2eG4/test/conditions_01_it.txt"
    }

    GlobalConstantsService : { inputFile : "Mu2eG4/test/globalConstants_01.txt" }

    G4Helper : { }

    SeedService: @local::automaticSeeds


  }

} # close of services block

physics :
{
  producers:
  {
    # Generate the event
    generate: @local::generate

    # Run G4 and add hits to the event
    g4run : @local::g4run

    # Form StrawHits (SH).
    makeSH : @local::makeSH

    randomsaver : @local::randomsaver

    # Look at the hits from G4.
    extractElData:
    {
      module_type          : ExtractElectronsData
      generatorModuleLabel : generate
      g4ModuleLabel        : g4run
      makerModuleLabel     : makeSH
      #trackerStepPoints    : tracker
      #minEnergyDep         : 0.0001
      #minHits              : 5
      #doDisplay            : true
      #clickToAdvance       : false
    }

  }

  analyzers:
  {

    tTSig:
    {
      module_type         : TTSig
      diagLevel           : -1
      makerModuleLabel    : makeSH
      elextractModuleLabel: extractElData
      maxFullPrint        : 0
      # g4ModuleLabel     : g4run
      minimumEnergyTracker: 0.000
      minimumEnergyCalo   : 0.000
      vdStepPoints        : virtualdetector
    }

    eventdisplay:
    {
      module_type     : EventDisplay
      g4ModuleLabel   : "g4run"
    }


  }

  p1 : [ 
         #generate ,
         #g4run ,
         #makeSH ,
         extractElData
       ]
  e1 : [ 
         tTSig
         #outfile 
       ]


  trigger_paths  : [p1]
  end_paths      : [e1]

}

outputs:
{
  # Define the output file.
  outfile : 
  {
    module_type    : RootOutput
    fileName       : "TTSig_bkg.root"
    fastCloning    : false
    outputCommands : ['keep *_*_*_*'
                #   , 'drop mu2ePointTrajectoryMapVector_*_*_*'
                #   , 'drop mu2eSimParticles_*_*_*'
                   # Uncomment the above line to reduce file size.
                     ]  
  }
}

physics.producers.makeSH.diagLevel : -1
physics.producers.makeSH.maxFullPrint : 0
physics.producers.generate.inputfile : "Mu2eG4/test/genconfig_01.txt"
physics.producers.g4run.diagLevel : 2
//physics.producers.g4run.visMacro: "Mu2eG4/test/visVols.mac"
services.user.SeedService.baseSeed         :  0
services.user.SeedService.maxUniqueEngines :  20
