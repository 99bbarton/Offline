# Configuration file for BkgNorm
#  - Generate events including of background processes.
#  - Run these through G4.
#  - No event display.
#  - Form StrawHits from StepPointMC objects
#  - Write event data to an output file
#  - Save state of random numbers to the event-data output file
#
# $Id: BkgNorm.fcl,v 1.2 2011/10/31 14:46:36 onoratog Exp $
# $Author: onoratog $
# $Date: 2011/10/31 14:46:36 $
#
# Original author Gianni Onorato.

#include "minimalMessageService.fcl"
#include "standardProducers.fcl"

# Give this process a name.
process_name : BkgNorm

# Start each new event with an empty event.
source :
{
  module_type : EmptyEvent
  maxEvents : 500
}

services :
{
  message : @local::default_message

  # Adjust configuration of message logger:
  # Load the standard message logger configuration:
  # Threshold=Info (from using mf_interactive). 
  # Limit of 5 per category; then exponential backoff.
  message.destinations.log.default.limit : 5
   
  TFileService :
  {
    fileName      : "BkgNorm.root"
  }

  RandomNumberGenerator : { }

  user :
  {
    GeometryService :
    {
      inputFile : "Mu2eG4/test/geom_01.txt"
    }

    ConditionsService :
    {
      conditionsfile : "Mu2eG4/test/conditions_01.txt"
    }

    G4Helper : { }

  }

} # close of services block

physics :
{
  producers:
  {
    # Generate the event
    generate: @local::generate

    # Run G4 and add hits to the event
    g4run : @local::g4run

    # Form StrawHits (SH).
    makeSH : @local::makeSH

    # Form CaloHits (APD hits)
  #  CaloReadoutHitsMaker : @local::CaloReadoutHitsMaker

    # Form CaloCrystalHits (reconstruct crystals from APDs)
  #  CaloCrystalHitsMaker : @local::CaloCrystalHitsMaker

    randomsaver : @local::randomsaver

  }

#  filters:
 # { 
    # Filter module. Do not write events with no Tracker or calo hits
  #  filterEmpty :
#    {
 #     module_type      : FilterEmptyEvents
  #    makerModuleLabel : makeSH
   #   keepTrackOrCalo  : 0
  #  }
 # }

  analyzers:
  {
   # Look at the hits from G4.
    CountRates:
    {
      module_type         : BkgNorm
      diagLevel           : -1
      makerModuleLabel    : makeSH
      maxFullPrint        : 0
      # g4ModuleLabel     : g4run
      # minimumEnergy     : 0.000
    }
  }

  p1 : [ 
       generate
       , g4run
       , makeSH
#       , CaloReadoutHitsMaker
#       , CaloCrystalHitsMaker
#       , filterEmpty
       ]
  e1 : [CountRates, outfile ]


  trigger_paths  : [p1]
  end_paths      : [e1]

}

outputs:
{
  # Define the output file.
  outfile : 
  {
    module_type    : RootOutput
    fileName       : "data_bkgNorm.root"
    outputCommands : ['keep *_*_*_*'
                   , 'drop mu2ePointTrajectoryMapVector_*_*_*'
                   , 'drop mu2eSimParticles_*_*_*'
		   # Uncomment the above line to reduce file size.
                     ]  
  }
}

physics.producers.makeSH.diagLevel : -1
physics.producers.makeSH.maxFullPrint : 0
#physics.producers.CaloReadoutHitsMaker.diagLevel : -1
#physics.producers.CaloReadoutHitsMaker.maxFullPrint : 0
#physics.producers.CaloCrystalHitsMaker.diagLevel : -1
#physics.producers.CaloCrystalHitsMaker.maxFullPrint : 0
physics.producers.generate.inputfile : "Analyses/test/genconfig_Bkg.txt"
