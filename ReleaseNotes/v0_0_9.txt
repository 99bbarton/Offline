
  Still under construction

           Release notes for Mu2e Offline software, v0_0_9

  $Id: v0_0_9.txt,v 1.8 2010/04/14 14:21:56 kutschke Exp $
  $Author: kutschke $
  $Date: 2010/04/14 14:21:56 $

1) Added the x tilt to the LTracker. 
   Also increase the inner radius a small amount to remove straw overlaps.
   TrackerGeom/inc/Sector.hh
   LTrackerGeom/inc/LTracker.hh 
   LTrackerGeom/inc/LTrackerMaker.hh 
   LTrackerGeom/src/LTrackerMaker.cc 
   Mu2eG4/src/Mu2eWorld.cc 
   Mu2eG4/test/geom_01.txt 

   This also included:
    - bug fixes to Mu2eWorld.cc
       - fix inner radii for the upstream and downstream DS vacuum.
       - fix offset
    - increase rOut and zHalfLength of the Ltracker Mother volume.

   Mu2eUtilities/inc/TwoLinePCA.hh 
    - add methods to return the values of s1 and s2.

2) Followup to 1.  Distinguish the length of the tracker mother
   volume from the length of the straws.
     LTrackerGeom/inc/LTracker.hh
     LTrackerGeom/inc/LTrackerMaker.hh
     LTrackerGeom/src/LTracker.cc
     LTrackerGeom/src/LTrackerMaker.cc
     Mu2eG4/test/geom_01.txt

3) Add runtime control of debug printout for SteppingAction and StrawSD.
       Mu2eG4/inc/SteppingAction.hh 
       Mu2eG4/src/SteppingAction.cc 
       Mu2eG4/inc/StrawSD.hh 
       Mu2eG4/src/StrawSD.cc 
       Mu2eG4/src/G4_plugin.cc 
       Mu2eG4/src/Mu2eWorld.cc 

   Add commented out examples of how to enable debug printout.
       Mu2eG4/test/geom_01.txt

4) Change the default LTracker to v0. Previously the default was v2,
   which runs faster than v0, particularly at startup. In v2, the 
   straws in each sector live within a sector mother volume; the problem
   was that the sector mother volumes overlapped. This caused straws
   to be missed and hits to be created in weird spots.
      Mu2eG4/src/Mu2eWorld.cc 

5) Change the algorithm to pad the mother volumes.  Previously the padding
   was multiplicative and was much to large.  Now it is additive and is
   at the micron level, which should be significant within the numerical
   precision of G4 but not cause artificial overlaps.
     LTrackerGeom/src/LTrackerMaker.cc

6) Moved the code that selects the physics list out of G4_plugin.cc into a 
   new function, physicsListDecider.cc.  The geometry file has also changed.

   To select a physics list specify the following in your geom_01.txt

   string g4.physicsListName = "N01";
   
   The value can be one of: "Minimal", "N01" or the name of a physics list
   known to G4.  "Minimal" will give the transport-only list we used for
   debugging the geometry; "N01" will give the list cribbed from G4 novice example
   N01.  If G4 does not recognize the name of a physics list it will default
   to QGSP_BERT.

   We still have the problem that the step lengths in the display are too long for
   QGSP_BERT, so the default has stayed at "N01".


7) Moved the code that copies StepPointMC objects from the internal G4 collections 
   into a data product. This code was in G4_plugin and it has been moved into
   its own function, Mu2eG4/src/addStepPointMCs.cc

8) New code to streamline the addition of G4StepLimiter's to our physics lists
   This inherits from G4VPhysicsConstructor so that it can be added to the output
   of lists created by the G4PhysListFactory.
     Mu2eG4/inc/StepLimiterPhysConstructor.hh 
     Mu2eG4/src/StepLimiterPhysConstructor.cc 
   This is the actual code to add G4StepLimiter's.  It is called from the
   above class and from the classes MinimalPhysicsList and PhysicsList.
     Mu2eG4/inc/addStepLimiter.hh 
     Mu2eG4/src/addStepLimiter.cc

9) Use the tools created in 8 to simplify these routines that create physics lists
   or append to them.
     Mu2eG4/src/physicsListDecider.cc 
     Mu2eG4/inc/PhysicsList.hh 
     Mu2eG4/src/PhysicsList.cc 
     Mu2eG4/src/MinimalPhysicsList.cc

10) The parameters that control the accuracy of the magnetic field integrator
    code were set to small values for all fields, even uniform fields with an
    exact helix integrator.  This slowed things down a lot.  Change the code
    use the default values if the field is uniform ( this is fast ) and to use
    the slow values only for non-uniform fields.
      Mu2eG4/src/Mu2eWorld.cc

11) Mu2eWorld had a private method of getMaterial().  This has been turned into
    a new class, MaterialFinder.  The reasons is prep for splitting Mu2eWorld into
    many functions ( which do not see a private member function of Mu2eWorld ).
    Why a class, not a free function?  To avoid the need to pass config on every call
    ( or alternatively, do a service lookup on every call ).
      Mu2eG4/src/Mu2eWorld.cc
      Mu2eG4/inc/Mu2eWorld.hh
      Mu2eG4/inc/MaterialFinder.hh
      Mu2eG4/src/MaterialFinder.cc

12) Code to construct a calorimeter.  So far it just contains the calorimeter mother volume.
      Mu2eG4/inc/constructCalorimeter.hh
      Mu2eG4/src/constructCalorimeter.cc
      Mu2eG4/test/geom_01.txt


13) Tweak Mu2e world so that exact helix stepper has the same behaviour as before the
    the full field was added.

14) Modify persistable classes in TrackerGeom to use int32_t instead of int for persistable data.
    This may make it impossible to read some previously written files.

