
  Still under construction

           Release notes for Mu2e Offline software, v0_3_3

  $Id: v0_3_3.txt,v 1.16 2011/02/23 00:36:47 logash Exp $
  $Author: logash $
  $Date: 2011/02/23 00:36:47 $

14) February 22, 2011 logash

    1. When I changed the way calorimeter is constructed (item 12), I forgot 
       to put corresponding changes to the sensitive detector code 
       (CaloCrystalSD and CaloReadoutSD). As a result, the readout id was not
       calculated properly in the cases, when charged particle produced 
       deposited energy in the APD (nuclear counter effect). Ordinary 
       calorimeter hits with energy deposition in the crystal were produced
       properly. 

       This bug was fixed in this update.

    2. It turned out that one more thing has to be changed when we switched 
       from MECO maps to TD maps. Since the field direction changed, particles
       now enter calorimeter from the other side. Correspondingly, the we 
       had to put readouts on the opposite side of the crystal, otherwise
       a lot of particles cross APDs before they enter calorimeter.

       The new variable in the geometry config file controls that:
         int calorimeter.crystalReadoutSide = 1; // +1 or -1, default is +1

       It should be +1 for TD maps and -1 for MECO maps (the same sign 
       convention as for toyDS.bz).

       The geom_01.txt and geom_mecofield.txt files are updated.

    Modified files:

       Mu2eG4/src/CaloCrystalSD.cc
       Mu2eG4/src/CaloReadoutSD.cc
       Mu2eG4/src/constructCalorimeter.cc
       Mu2eG4/test/geom_01.txt
       Mu2eG4/test/geom_mecofield.txt

13) February 22, 2011 kutschke

    Speed up the reading of the G4BL style magnetic field maps.  The reading
    of these maps is slow because they are text files (or compressed text files).
    I added two new methods to BFieldManagerMaker:

        void writeG4BLBinary( unsigned int i, std::string const& key );
        void readG4BLBinary( const std::string& headerFilename,
                             BFMap& bfmap,
                             CLHEP::Hep3Vector G4BL_offset );

    The first method writes an existing field map to a binary file.  Is can be called, optionally, 
    right after reading in a text format G4BL.  The option is enabled in the config file;
    see the example Mu2eG4/test/geom_writeBF.txt

    The second method reads the binary data written by the previous code.  It checks endian-ness
    on readback.

    The binary format requires two files for each map
       xxxx.header - this is a copy of the preamble from the text file
       xxxx.bin    - the binary data
    The code keys on the file types .header and .bin so these must not be changed.

        BFieldGeom/inc/BFieldManagerMaker.hh   - See above
        BFieldGeom/src/BFieldManagerMaker.cc
        BFieldGeom/inc/BFMap.hh                - comments only
        BFieldGeom/inc/Container3D.hh          - Add a non-const accessor needed by readG4BLBinary

        BFieldGeom/inc/BFieldManager.hh        - New accessor to get BFMap by const ref to derived class,
        BFieldGeom/src/BFieldManager.cc          not by const ref to base.

        Mu2eG4/test/geom_01.txt                - remove commented out meco field section  
        Mu2eG4/test/geom_mecofield.txt         - add cvs versioning comments
        Mu2eG4/test/geom_writeBF.txt           - example of how to write the field maps

12) February 21, 2011 logash

    Changed the way calorimeter constructed in Mu2eG4/src/constructCalorimeter.cc.

    The old way was to construct one full crystal (wrapped, with readouts) and then
    to place it many time. That approach allowed to save some memory, but is very
    inconvenient when one needs to track in which volume the particular hit occured.

    In the new code each crystal is constructed separately. Thus the total number of
    physics volumes in the calorimeter increased by a factor 4 (or so). The 
    advantage now is that all these volumes are easily tracked in the latter analysis.

11) February 21, 2011 logash

    Second part of the fix to the magnetic field problems that have been
    discussed on the mu2e-sim list in the last two days.  

    The field map is defined on the rectangular grid of points. In the TD maps 
    the field is present for all the points. In the MECO maps the field is defined
    only in the cylindrical part of the grid. Previously the B-field was set only 
    inside DS, TS and PS vacuum, thus the field was never requested for that part 
    of the grid, where the field was not defined. After B-field was described as
    global (see item 5, February 13), unattached to any volume, G4 started to 
    request for field at any position. There was a bug in the existing code which 
    lead to the wrong field value in the boundary region between defined and undefined 
    points.

    This problem has been fixed and the simulation now works correctly as with 
    TD maps as with MECO maps, and can handle points on the grid where field is
    not defined.

    I've added geometry configuration file Mu2eG4/test/geom_mecofield.txt, which
    has geometry properly tuned to use old MECO maps. Use it for corresponding 
    studies. The default field map in geom_01.txt is the latest TD map.

    Files modified:

       BFieldGeom/inc/BFMapBase.hh
       BFieldGeom/inc/BFMap.hh
       BFieldGeom/inc/BFieldManager.hh
       BFieldGeom/src/BFMap.cc
       BFieldGeom/src/BFieldManager.cc

    New files:

      Mu2eG4/test/geom_mecofield.txt

10) February 20, 2011 kutschke
    First part of the fix to the magnetic field problems that have been
    discussed on the mu2e-sim list in the last two days.  

    With this fix the TD field is working correctly.

    There are two problems.  The first is easy to solve: MECO and TD choose
    different sign conventions: MECO field is in the -z direction and
    the TD field is in the +z direction.  The other problem will be discussed
    when that fix is commited.

    Mu2eG4/test/geom_01.txt
      - Vanya changed the direction of the uniform field to match the TD convention
           double toyDS.bz = +1.0;
      - I added a reminder that the torus radius needs to change when you uncomment
        the MECO field description.

9) February 17, 2011 logash

   Added comments to stopping target example in ReadBack.cc 
   (function doStoppingTarget()), and made the code slightly more 
   efficient.

8) February 15, 2011 kutschke
   A simple producer to be used for tutorials.
   HelloWorld/src/HelloProducer_plugin.cc

7) February 15, 2011 onoratog
   
   The limitation on cos theta for the generation of ejected protons is
   removed. Now they are producted isotropically. Two configuration files:
     Mu2eG4/test/genconfig_05.txt
     Analyses/test/genconfig_Bkg.txt
   and the default option in 
     EventGenerator/src/EjectedProtonGun.cc
   have been changed.
  
6) February 14, 2011 logash

   Stopping target foils are now sensitive detectors. There is new output 
   StepPointMCCollection with the name "stoppingtarget". This collection
   holds all G4 steps occured in the stopping target foils.

   There is example in ReadBack.cc of how to use these data, function
   doStoppingTarget(). In this example four histograms are filled: 
   the total energy deposition in the target, the total path length and 
   the number of foils crossed by the particle. There is 2D version of 
   the last histogram, where number of crossed foils is shown versus 
   the id of the foil of origin. All these histograms are in "checkhits"
   folder, with the name, starting from "hTarget".

   New files:

     Mu2eG4/inc/StoppingTargetSD.hh
     Mu2eG4/src/StoppingTargetSD.cc

   Modified files:

     Mu2eG4/src/constructStoppingTarget.cc
     Mu2eG4/inc/SensitiveDetectorName.hh
     Mu2eG4/src/G4_plugin.cc
     Mu2eG4/src/Mu2eWorld.cc
     Mu2eG4/src/ReadBack.cc
     Mu2eG4/src/ReadBack.hh

5) February 13, 2011 logash

   1. Magnetic field is now defined as default field, not attached 
      to any particular volume. The standard geometry file, geom_01.txt, 
      is updated: the new default magnetic field map is now "Mau4" - the 
      latest map, provided by TD. It is still possible to use uniform 
      field in DS (downstream only or the whole DS).

      The default geometry loads the full map - which includes PS, TS and 
      DS. The framework startup time is now significantly longer - about 
      50 seconds on ilcsim2. For many studies only DS field is relevant. 
      File Mu2eG4/test/geom_dsfield.txt provides example how to describe 
      field only in DS (in can be used instead of geom_01.txt). That speeds 
      up the load time to 20 seconds. 

      It is possible to defined no magnetic field at all. For that, use 
      the following line in configuration:
      vector<string> bfield.files = { };

   2. The default torus radius is changed from 2926 mm to 2929 mm. The new 
      value is the default in all beamline studies and the TD B-field maps
      are calculated using R=2929 mm. 

      The position of the stopping target, tracker, etc., did not change. 
      But the end of TS5 moved by 3 mm, thus the distance between end of
      the last collimator and stopping target has been reduced by 3 mm.

   3. Two more virtual detectors are added. VD #9 is placed just before 
      the stopping target, VD #10 is placed after the stopping targer, 
      just before the proton absorber. The proton absorber has been moved 
      downstream by 0.1 mm - thisckness of virtual detector. Radially these 
      two virtual detectors extend to neutron absorder. 

   4. Removed annoing printout from StackinAction

   5. Fixed typo in beamline_genconfig.txt

    New files:

      Mu2eG4/test/geom_dsfield.txt

    Modified files:

      Mu2eG4/inc/Mu2eWorld.hh
      Mu2eG4/src/Mu2eWorld.cc
      Mu2eG4/src/StackingAction.cc
      Mu2eG4/src/constructProtonAbsorber.cc
      Mu2eG4/src/constructVirtualDetectors.cc
      BFieldGeom/src/BFMap.cc
      VirtualDetectorGeom/src/VirtualDetectorMaker.cc
      Mu2eG4/test/beamline_genconfig.txt
      Mu2eG4/test/beamline_geom.txt
      Mu2eG4/test/geom_01.txt

4) February 11, 2011 genser

   Added geometry config file for ttracker radii study

     Mu2eG4/test/geom_DifferentTTrackerRadius.txt

3) February 11, 2011 genser

   Modified TTrackerSectorEnvelope to decrease its size to avoid
   potential overlaps when changing sizes of the tracker

     Mu2eG4/src/constructTTrackerv3.cc

2) February 10, 2011 genser

   Added/modified absorber materials:
   polyethylene (with and without B and Li)

     Mu2eG4/src/ConstructMaterials.cc
     Mu2eG4/test/geom_01.txt

1) February 09, 2011 genser

   Added Neutron Absorbers and new materials:
   borated polyethylene (5% and 30%)

     Mu2eG4/inc/constructNeutronAbsorber.hh
     Mu2eG4/src/ConstructMaterials.cc
     Mu2eG4/src/Mu2eWorld.cc
     Mu2eG4/src/constructNeutronAbsorber.cc
     Mu2eG4/test/geom_01.txt
