
 Still under construction

           Release notes for Mu2e Offline software, v0_3_0

  $Id: v0_3_0.txt,v 1.4 2010/12/21 21:56:57 genser Exp $
  $Author: genser $
  $Date: 2010/12/21 21:56:57 $


 4) December 21, 2010 genser

    Removed StepPointG4 from sensitive detector classes, stored data
    directly in the framework data products using StepPointMC,
    bypassing G4 collections;
    Instantiated all sensitive detectors in Mu2eWorld; defined their
    names in Mu2eG4/inc/SensitiveDetectorName.hh;
    Added a function to the sensitive detector classes to be able to
    pass the address of the proper framework data product collection
    before invoking G4 BeamOnDoOneEvent;
    Added cvs keywords to some sensitive detectors files;

      Mu2eG4/inc/CaloCrystalSD.hh
      Mu2eG4/inc/CaloReadoutSD.hh
      Mu2eG4/inc/Mu2eWorld.hh
      Mu2eG4/inc/SensitiveDetectorName.hh
      Mu2eG4/inc/StrawSD.hh
      Mu2eG4/inc/VirtualDetectorSD.hh
      Mu2eG4/src/CaloCrystalSD.cc
      Mu2eG4/src/CaloReadoutSD.cc
      Mu2eG4/src/G4_plugin.cc
      Mu2eG4/src/Mu2eWorld.cc
      Mu2eG4/src/StrawSD.cc
      Mu2eG4/src/VirtualDetectorSD.cc
      Mu2eG4/src/constructCalorimeter.cc
      Mu2eG4/src/constructLTrackerv3.cc
      Mu2eG4/src/constructTTrackerv3.cc
      
 3) December 17, 2010 kutschke
    Remove CPU time from the standard printout so that it is easier to 
    diff the log files from the reference jobs.  In the print method,
    make the terminal newline optional.
      ToyDP/src/StatusG4.cc
      ToyDP/inc/StatusG4.hh

 2) December 17, 2010 kutschke
    Previously this was a placeholder.  It now contains codes for all
    G4 processes defined for QGSP_BERT and for all actions that can be
    taken by SteppingAction.
      ToyDP/inc/StoppingCode.hh
      ToyDP/src/StoppingCode.cc


    New class to hold information about all of the physics processes
    known to G4 plus the mu2e specific reasons why SteppingAction 
    can stop a track.
       Mu2eG4/inc/PhysicsProcessInfo.hh  
       Mu2eG4/src/PhysicsProcessInfo.cc

    New classes that hold a record of Mu2e-specific actions taken
    by SteppingAction.  Used to pass information from SteppingAction
    to TrackingAction::PostUserTrackingAction
       Mu2eG4/inc/UserTrackInformation.hh  
       Mu2eG4/src/UserTrackInformation.cc

    In TrackingAction, use the above two classes to provide a real value 
    for the StoppingCode that is part of the SimParticle record.
      Mu2eG4/src/TrackingAction.cc 
      Mu2eG4/inc/TrackingAction.hh

     The code to drop particles by pdgId was moved from SteppingAction 
     to StackingAction. This means that particles dropped by PDGID no longer
     are added to the SimParticleCollection.  When a track is killed by 
     SteppingAction, that action is recorded in the UserTrackInfo object. 
     Refactored SteppingAction to move repeated code into a function.
       Mu2eG4/inc/StackingAction.hh 
       Mu2eG4/src/StackingAction.cc

     Add a call to trackingAction::endRun.  This optionally produces printout
     from PhysicsProcessInfo to give the frequency with which StoppingCodes
     occur.
       Mu2eG4/src/G4_plugin.cc

 1) December 13, 2010 logash

    Small updates of the configuration files:

    1. Mu2eG4/test/beamline_01.py and beamline_02.py - standard event 
       generator is switched on by default.
    2. Mu2eG4/test/beamline_genconfig.txt - added new parameter targetFrame
    3. Changed the way how magnetic field maps are defined in 
       Mu2eG4/test/beamline_geom.txt
