#include "minimalMessageService.fcl"
#include "standardProducers.fcl"
#include "standardServices.fcl"

# Give this process a name.
process_name : BkgTrackRejecter

# Read events from a file (made by example 3)
source :
{
  module_type : RootInput
  fileNames : ["data_03.root"]
  maxEvents : -1
}

services :
{
  #message : @local::mf_debugging

  # Adjust configuration of message logger:
  # Load the standard message logger configuration:
  # Threshold=Info (from using mf_interactive). 
  # Limit of 5 per category; then exponential backoff.
  #message.destinations.log.default.limit : 5
  
  message : @local::default_message
    
    
  TFileService :
  {
    fileName      : "BkgTrackRejecterData.root"
  }

  RandomNumberGenerator : { }

  user :
  {
    GeometryService :
    {
      inputFile : "Mu2eG4/test/geom_01.txt"
    }

    ConditionsService :
    {
      conditionsfile : "Mu2eG4/test/conditions_01.txt"
    }

    GlobalConstantsService : { inputFile : "Mu2eG4/test/globalConstants_01.txt" }
    
    G4Helper : { }
    SeedService       : @local::automaticSeeds
    
  }

} # close of services block

physics :
{
  producers:
  {
    # Look at the hits from G4.
    trckRjctByTime:
    {
      module_type           : BkgTrackRejecterByTime
      generatorModuleLabel  : generate
      g4ModuleLabel         : g4run
      makerModuleLabel      : makeSH
      nsigmaForTimeSel      : 1.960               #-1: use default time window, x>0: x sigma of the fitted time peak  (ex. 1.960, 1.645 ..)
      ratioSharedPnts       : 0.7                 #criteria of merging for close peaks
      protonRejecEff        : 0.99                #efficiency of proton rejection, x<=0: disable the proton rejection               (to switch on the proton rejection both protonRejecEff and pulseCut must be on)
      pulseCut              : 0.015               #pulse cut (in MeV) for the proton rejection, x<=0: disable the proton rejection  (to switch on the proton rejection both protonRejecEff and pulseCut must be on)
      driftVelocity         : 0.05                # mm/ns
      #trackerStepPoints    : tracker
      #minEnergyDep         : 0.0001
      #minHits              : 5
      #doDisplay            : true
      #clickToAdvance       : false
    }
    
    trckRjctByGmTplg:
    {
      module_type           : BkgTrackRejecterByGeomTplg
      generatorModuleLabel  : generate
      g4ModuleLabel         : g4run
      makerModuleLabel      : makeSH
      tRejecterModuleLabel  : trckRjctByTime
      nSigmaForClMatch      : 1.960               #n times sigma used during the matching of the clusters
      nSigmaForClSlope      : 1.645               #n times sigma used during the matching of the clusters slope to 0
      doDisplay             : false
      #trackerStepPoints    : tracker
      #minEnergyDep         : 0.0001
      #minHits              : 5
      #doDisplay            : true
      #clickToAdvance       : false
    }
  }

  analyzers:
  {
  }

  #p1 : []
  #e1 : [trckRjctByGmTplg]
  p1 : [trckRjctByTime]
  e1 : [outfile]


  trigger_paths  : [p1]
  end_paths      : [e1]

}

outputs:
{
  outfile :
  {
    module_type   :   RootOutput
    fileName      :   "data_03.root"
    outputCommands:   [ "keep *_*_*_*"
#                        ,"drop mu2e::PointTrajectorymv_*_*_*"
                      ]
  }

}

// Initialze seeding of random engines: do not put these lines in base .fcl files for grid jobs.
services.user.SeedService.baseSeed         :  0
services.user.SeedService.maxUniqueEngines :  20
