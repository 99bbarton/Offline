#include "minimalMessageService.fcl"
#include "standardProducers.fcl"

# Give this process a name.
process_name : DisplayData

# Read events from a file (made by example 3)
source :
{
  module_type : RootInput
  fileNames : ["data_03.root"]
  maxEvents : -1
}

services :
{
  #message : @local::mf_debugging

  # Adjust configuration of message logger:
  # Load the standard message logger configuration:
  # Threshold=Info (from using mf_interactive). 
  # Limit of 5 per category; then exponential backoff.
  #message.destinations.log.default.limit : 5
  
  message : @local::default_message
    
    
  TFileService :
  {
    fileName      : "DisplayDataRoot.root"
  }

  RandomNumberGenerator : { }

  user :
  {
    GeometryService :
    {
      inputFile : "Mu2eG4/test/geom_01.txt"
    }

    ConditionsService :
    {
      conditionsfile : "Mu2eG4/test/conditions_01.txt"
    }
    
    #G4Helper : { }
    
  }

} # close of services block

physics :
{
  producers:
  {
  }

  analyzers:
  {
    # Look at the hits from G4.
    displayData:
    {
      module_type           : TTDisplayData
      generatorModuleLabel  : generate
      g4ModuleLabel         : g4run
      makerModuleLabel      : makeSH
      nsigmaForTimeSel      : 1.250              #-1: use default time window, x>0: x sigma of the fitted time peak  (ex. 1.960, 1.645 ..)
      protonRejecEff        : -1.00              #efficiency of proton rejection, x<=0: disable proton rejection
      seed                  : [1234]
      #trackerStepPoints    : tracker
      #minEnergyDep         : 0.0001
      #minHits              : 5
      #doDisplay            : true
      #clickToAdvance       : false
    }
  }

  p1 : []
  e1 : [displayData]


  trigger_paths  : [p1]
  end_paths      : [e1]

}
