# Configuration file for making StrawHits.
#
# $Id: makeClusters.fcl,v 1.9 2012/03/02 17:16:22 gandr Exp $
# $Author: gandr $
# $Date: 2012/03/02 17:16:22 $
#
# Original author Rob Kutschke
#

#include "minimalMessageService.fcl"
#include "standardProducers.fcl"

# Give this job a name.
process_name : HitTest01

# Read events from a file (made by Mu2eG4 example g4test_03.fcl)
source : 
{ 
  module_type : RootInput 
  fileNames : ["data_03.root"]        
  maxEvents : 200
}

services :
{
  message : @local::default_message

  TFileService :
  {
    fileName      : "makeclusters.root"
  }

  RandomNumberGenerator : { }

  user :
  {
    GeometryService :
    {
      inputFile : "Mu2eG4/test/geom_01.txt"
    }
    ConditionsService :
    {
      conditionsfile : "Mu2eG4/test/conditions_01.txt"
    }
    GlobalConstantsService : { inputFile : "Mu2eG4/test/globalConstants_01.txt" }  
  }

}

physics :
{
  producers:
  {
    # Form StrawHits (SH).
    makeSH:@local::makeSH

    # make  the StrawClusters
    makeSC:
    {
      module_type      : MakeStrawCluster
      makerModuleLabel : makeSH
      diagLevel        : 1
      maxFullPrint     : 5
    }

  }

  analyzers:
  {
    # Check the StrawHits
    testSH:
    {
      module_type      : ReadStrawHit
      makerModuleLabel : makeSH
      diagLevel        : 3
      maxFullPrint     : 5
    }

    # Check the StrawClusters
    testSC:
    {
      module_type        : ReadStrawCluster
      makerModuleLabel   : makeSH
      clmakerModuleLabel : makeSC
      diagLevel          : 1
      maxFullPrint       : 5
    }

  }

  p1 : [makeSH , makeSC ]
  e1 : [testSH , testSC, outfile]


  trigger_paths  : [p1]
  end_paths      : [e1]

}

outputs:
{

 outfile :
 {
   module_type   :   RootOutput
   fileName	 :   "clusters_03.root"
#   fastCloning   :   false
 }

}


