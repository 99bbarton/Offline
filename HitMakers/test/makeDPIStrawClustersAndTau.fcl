# Configuration file for making StrawHits.
#
# $Id: makeDPIStrawClustersAndTau.fcl,v 1.11 2012/03/02 17:16:22 gandr Exp $
# $Author: gandr $
# $Date: 2012/03/02 17:16:22 $


#include "minimalMessageService.fcl"
#include "standardProducers.fcl"


# Give this job a name.
process_name : HitTest01

# Read events from a file (made by Mu2eG4 example g4test_03.py)
source :
{
  module_type : RootInput
  fileNames : ["/grid/data/mf/data_03-5000.root"]
  maxEvents : -1
}

services :
{
  message : @local::default_message

  TFileService :
  {
    fileName      : "makeDPISCsBetaTauTheta.root"
  }

  RandomNumberGenerator : { }

  GeometryService :
  {
    inputFile : "Mu2eG4/geom/geom_common.txt"
  }

  ConditionsService :
  {
    conditionsfile : "Mu2eG4/test/conditions_01.txt"
  }

  GlobalConstantsService : { inputFile : "Mu2eG4/test/globalConstants_01.txt" }

}

physics :
{
  producers:
  {
    # Save state of random numbers to the event.
    # temporarily defective
    # randomsaver: @local::randomsaver

    # Form StrawHits (SH).
    makeSH: @local::makeSH

    # make  the DPIStrawClusters
    makeSC:
    {
      module_type      : MakeDPIStrawCluster
      makerModuleLabel : makeSH
      diagLevel        : 0
      maxFullPrint     : 5
    }

  }

  analyzers:
  {
    # Check the StrawHits
    testSH:
    {
      module_type      : ReadStrawHit
      makerModuleLabel : makeSH
      diagLevel        : 0
      maxFullPrint     : 5
    }

    # Check the StrawClusters, and capture plots of tau, beta and tan theta
    testSC:
    {
      module_type        : BetaTauPitch
      g4ModuleLabel      : g4run
      makerModuleLabel   : makeSH
      clmakerModuleLabel : makeSC
      diagLevel          : 0
      maxFullPrint       : 5
    }

  }

  p1 : [makeSH , makeSC ]
  e1 : [testSH , testSC ]


  trigger_paths  : [p1]
  end_paths      : [e1]

}

outputs:
{

# outfile :
# {
#   module_type   :   RootOutput
#   filename      :   "hits_03.root"
#   fastCloning   :   false
# }

}


