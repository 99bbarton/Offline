#
# Read Tracker digis and run the track trigger prototype 
#
#  > mu2e --config TrkFilters/fcl/ReadDigis.fcl --source "your digis file" --TFile ReadDigis.root --nevts=100
#
#include "fcl/minimalMessageService.fcl"
#include "fcl/standardServices.fcl"
#include "fcl/standardProducers.fcl"
#include "TrkHitReco/fcl/prolog.fcl"
#include "TrkPatRec/fcl/prolog.fcl"
#include "TrkFilters/fcl/prolog.fcl"
#include "TrkDiag/fcl/prolog.fcl"

process_name : ReadDigis

source :
{
  module_type : RootInput
}
# we don't need any simulation services for this job
services : @local::Services.Reco
# timing information
services.TimeTracker : {
  dbOutput : {
    filename : "ReadDigis.db"
    overwrite : true
    }
}
# setup modules needed to filter tracks
physics :
{
  producers : {
    @table::TrkHitReco.producers
    @table::Tracking.TrkTrigger.producers
     TTKSFDeM : @local::TTKSF
     TTKSFDeP : @local::TTKSF
     RSD : {
	module_type : ReadStrawDigi
      }
  }
  filters : {
    @table::TrkTrigger.Filters
  }
  analyzers : {
    TrkTriggerDiag : {
      module_type : TrkTriggerDiag
    }
  }
}

physics.filters.PosHelixFilter.MinMomentum	      : 225.0
physics.filters.NegHelixFilter.MinMomentum	      : 225.0
physics.filters.DeMSeedFilter.MinMomentum	      : 80.0
physics.filters.DePSeedFilter.MinMomentum	      : 80.0

physics.producers.TTKSFDeM.SeedCollection      : "TThelixFinder:Positive"
physics.producers.TTKSFDeM.fitparticle	      : @local::Particle.eminus
physics.producers.TTKSFDeM.fitdirection	      : @local::FitDir.downstream 

physics.producers.TTKSFDeP.SeedCollection      : "TThelixFinder:Negative"
physics.producers.TTKSFDeP.fitparticle	      : @local::Particle.eplus
physics.producers.TTKSFDeP.fitdirection	      : @local::FitDir.downstream 

# create a trigger test path.  Note that physics.trigger_paths and physics.end_paths are not used, art will
# create those automatically from all the defined paths

physics.TCTrigPath : [ RSD, @sequence::TrkTrigger.Sequences.TCFilterSequence ]

physics.PHTrigPath : [ RSD, @sequence::TrkTrigger.Sequences.PosHelixFilterSequence ]

physics.DeMSeedTrigPath : [RSD,  @sequence::TrkTrigger.Sequences.DeMSeedFilterSequence ]

#physics.DeMKalTrigPath : [ @sequence::Tracking.Trigger.DeMKalFilterSequence ]
physics.DePSeedTrigPath : [RSD,  @sequence::TrkTrigger.Sequences.DePSeedFilterSequence ] 

# analysis path: this is for monitoring only
physics.ReadDigisEndPath : [ TrkTriggerDiag ]

