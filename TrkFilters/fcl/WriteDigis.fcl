#
# Create and write digis (only!)  This job is configured without inputs (background only), it can
# be trivially modified to process signal+bkg by switching the input module.  For bkg only, run as:
#
#  > mu2e --config TrkFilters/fcl/WriteDigis.fcl --TFile TTWrite.root --nevts=100
#
#include "fcl/minimalMessageService.fcl"
#include "fcl/standardProducers.fcl"
#include "fcl/standardServices.fcl"
#include "TrkFilters/fcl/prolog.fcl"
#include "TrkDiag/fcl/prolog.fcl"
#include "CaloMC/fcl/prolog.fcl"
#include "bkgfiles.fcl"

process_name : WriteDigis

source :
{
  module_type : EmptyEvent
#  module_type : RootInput
}

services : @local::Services.SimAndReco
physics :
{
  producers : {
    @table::EventMixing.producers
    @table::TrackerMC.producers
    @table::TrkHitReco.producers
    @table::Tracking.TrkTrigger.producers
    @table::CaloDigiMC.producers
    protonTimeMap: { module_type : GenerateProtonTimes }
    muonTimeMap: { module_type : GenerateMuonLife }
  }
  filters : {
    @table::EventMixing.filters
  }
}
#define output module
outputs: {
  WriteDigis : {
    module_type: RootOutput
    outputCommands: [ "drop *_*_*_*",
    @sequence::Tracking.Output.Digis,
   "keep mu2e::CaloDigis_*_*_*" 
    ]
  }
}

# create paths.  Note that physics.trigger_paths and physics.end_paths are not used, art will
# create those automatically from all the defined paths

physics.WriteDigisTrigPath : [   @sequence::EventMixing.CD3Mixers,
  @sequence::EventMixing.TimeMaps, 
  @sequence::TrackerMC.DigiSim,
  @sequence::CaloDigiMC.DigiSim 
  ]
physics.WriteDigisEndPath : [ WriteDigis ]

# finish output configuration: this needs to be done after the path exists
outputs.WriteDigis.fileName: "Digis.art"
# setup mixers

physics.producers.makeSD.TimeOffsets.inputs : [ "protonTimeMap", "muonTimeMap" ] 
#include "EventMixing/fcl/epilog.fcl
# the following are needed for interactive running.  They will be overwritten if you submit this job
# on the grid so do not need to be removed.
services.SeedService.baseSeed         :  773651
services.SeedService.maxUniqueEngines :  20
# patch Calo
#physics.producers.CaloShowerStepFromStepPt.physVolInfoInput : compressPVDetector
