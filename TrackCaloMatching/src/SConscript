#!/usr/bin/env python
#
# Original author Rob Kutschke.
#

Import('env')

Import('mu2e_helper')

helper=mu2e_helper()

rootlibs  = env['ROOTLIBS']
babarlibs = env['BABARLIBS']

mainlib = helper.make_mainlib ( [
    'mu2e_TrkReco',
    'mu2e_BTrkData',
    'mu2e_Mu2eBTrk',
    'mu2e_GeometryService',
    'mu2e_CalorimeterGeom',
    'mu2e_Mu2eInterfaces',
    'mu2e_RecoDataProducts',
    babarlibs,
    'art_Framework_Services_Registry',
    'art_Persistency_Provenance',
    'canvas_Persistency_Provenance',
    'art_Persistency_Common',
    'canvas_Persistency_Common',
    'art_Utilities',
    'canvas_Utilities',
    'CLHEP',
    'cetlib',
    'boost_system',
    ] )

helper.make_plugins( [
    mainlib,
    'mu2e_ConditionsService',
    'mu2e_GeometryService',
    'mu2e_RecoDataProducts',
    'mu2e_MCDataProducts',
    'mu2e_CalorimeterGeom',
    'mu2e_TTrackerGeom',
    'mu2e_ConfigTools',
    'mu2e_Mu2eInterfaces',
    babarlibs,
    'art_Framework_Core',
    'art_Framework_Principal',
    'art_Framework_Services_Registry',
    'art_Framework_Services_Optional',
    'art_Framework_Services_Optional_TFileService_service',
    'art_Framework_Services_Optional_RandomNumberGenerator_service',
    'art_Persistency_Common',
    'canvas_Persistency_Common',
    'art_Persistency_Provenance',
    'canvas_Persistency_Provenance',
    'art_Utilities',
    'canvas_Utilities',
    'MF_MessageLogger',
    'fhiclcpp',
    'cetlib',
    'CLHEP',
    rootlibs,
    'boost_filesystem',
   'boost_system',
    ] )

helper.make_dict_and_map( [
    mainlib,
    'mu2e_RecoDataProducts',
    'art_Persistency_Provenance',
    'canvas_Persistency_Provenance',
    'art_Persistency_Common',
    'canvas_Persistency_Common',
    'art_Utilities',
    'canvas_Utilities',
    'CLHEP',
    'cetlib',
    'Core'
    ] )

# This tells emacs to view this file in python mode.
# Local Variables:
# mode:python
# End:
