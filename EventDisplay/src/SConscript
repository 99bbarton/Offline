#!/usr/bin/env python
#
# Original author Rob Kutschke.
#

import os, re
Import('env')
Import('mu2e_helper')

helper=mu2e_helper()

babarlibs = env['BABARLIBS']
BABARINSTALLED = [ '-DBABARINSTALLED' ]

os.system('make -s -f RootDictMakeFile')

file=os.popen('root-config --cflags --glibs')
ll = file.readlines()[0]  # first line is all we need
ll = ll[:-1]   # strip off new line
file.close()

my_lib=[]  # default if no cc_files
cc_files = Glob('*.cc',strings=True)
cc_files2 = Glob('dict_classes/*.cc',strings=True)

env.SharedLibrary( helper.prefixed_plugin_libname('EventDisplay_module.cc')
                   , cc_files, cc_files2,
                   # common libs
                   LIBS=[ 'mu2e_Mu2eBTrk',
			  'mu2e_TrkReco',
                          'mu2e_BTrkData',
			  'mu2e_Mu2eUtilities',
                          'mu2e_MCDataProducts',
                          'mu2e_RecoDataProducts',
                          'mu2e_GeometryService',
                          'mu2e_ConditionsService',
                          'mu2e_CalorimeterGeom',
                          'mu2e_TrackerGeom',
                          'mu2e_TTrackerGeom',
                          'mu2e_GeomPrimitives',
                          'mu2e_ConfigTools',
                          'mu2e_Mu2eInterfaces',
                          'mu2e_GeneralUtilities',
                          babarlibs,
                          'art_Framework_Core',
                          'art_Framework_Principal',
                          'art_Framework_Services_Registry',
                          'art_Framework_Services_Optional',
                          'art_Framework_Services_Optional_TFileService_service',
                          'art_Framework_Services_Optional_RandomNumberGenerator_service',
                          'art_Persistency_Common',
                          'art_Persistency_Provenance',
                          'art_Utilities',
                          'canvas',
                          'MF_MessageLogger',
                          'fhiclcpp',
                          'cetlib',
                          'cetlib_except',
                          'CLHEP',
                          'HepPID',
                          'Core',
                          'boost_filesystem',
                          'boost_system',
                          ],
                   CPPFLAGS= [ BABARINSTALLED ],
                   LINKFLAGS=['-Wl,--no-undefined',
                              ll.split(),'-lGeom','-lGeomPainter', '-lGed'
                              ]
                   )

# This tells emacs to view this file in python mode.
# Local Variables:
# mode:python
# End:
