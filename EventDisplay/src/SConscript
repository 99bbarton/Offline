#
# $Id: SConscript,v 1.12 2012/07/22 01:06:02 kutschke Exp $
# $Author: kutschke $
# $Date: 2012/07/22 01:06:02 $
#
# Original author Rob Kutschke.
#

import os, re
Import('env')

if os.path.exists('../../BaBar/BaBar/src/SConscript'):
   BABARINSTALLED = [ '-DBABARINSTALLED' ]
#not all of these libraries are required
   babarlibs = env['BABARLIBS']
else:
   BABARINSTALLED = [ ]
   babarlibs = [ ]
   print 'BaBar package is absent.'
   print 'Track classes and hit classes which are defined in the BaBar package cannot be displayed in the event display.'

os.system('make -s -f RootDictMakeFile')

file=os.popen('root-config --cflags --glibs')
ll = file.readlines()[0]  # first line is all we need
ll = ll[:-1]   # strip off new line
file.close()

my_lib=[]  # default if no cc_files
cc_files = Glob('*.cc',strings=True)
cc_files2 = Glob('dict_classes/*.cc',strings=True)
env.SharedLibrary('#/lib/EventDisplay_module', cc_files, cc_files2,
                  # common libs
                  LIBS=[ 'art_Framework_Core',
                         'art_Utilities',
                         'art_Framework_Services_Registry',
                         babarlibs,
                         'GeometryService',
                         'ConditionsService',
                         'TrackerGeom',
                         'LTrackerGeom',
                         'TTrackerGeom',
                         'GeomPrimitives',
                         'Mu2eUtilities',
                         'ConfigTools',
                         'MCDataProducts',
                         'RecoDataProducts',
                         'GeneralUtilities',
                         'HepPID',
                         'CLHEP',
                         'Core',
                         ],
                  CPPFLAGS= [ BABARINSTALLED ],
                  LINKFLAGS=[ll.split(),'-lGeom','-lGeomPainter', '-lGed']
                  )

# This tells emacs to view this file in python mode.
# Local Variables:
# mode:python
# End:
