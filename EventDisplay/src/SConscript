#!/usr/bin/env python
#
# Original author Rob Kutschke.
#

import os, re
Import('env')
Import('mu2e_helper')

helper=mu2e_helper()

babarlibs = env['BABARLIBS']
rootlibs = env['ROOTLIBS']
extrarootlibs = [ 'Geom', 'Geom', 'GeomPainter', 'Ged' ]
mu2eopts = env['MU2EOPTS'];
level = mu2eopts[0];

userlibs = [ rootlibs, 
             extrarootlibs,
             babarlibs,
                          'mu2e_Mu2eBTrk',
			  'mu2e_TrkReco',
                          'mu2e_BTrkData',
			  'mu2e_Mu2eUtilities',
                          'mu2e_MCDataProducts',
                          'mu2e_RecoDataProducts',
                          'mu2e_GeometryService',
                          'mu2e_ConditionsService',
                          'mu2e_CalorimeterGeom',
                          'mu2e_TrackerGeom',
                          'mu2e_TTrackerGeom',
                          'mu2e_GeomPrimitives',
                          'mu2e_ConfigTools',
                          'mu2e_Mu2eInterfaces',
                          'mu2e_GeneralUtilities',
                          'art_Framework_Core',
                          'art_Framework_Principal',
                          'art_Framework_Services_Registry',
                          'art_Framework_Services_Optional',
                          'art_Framework_Services_Optional_TFileService_service',
                          'art_Framework_Services_Optional_RandomNumberGenerator_service',
                          'art_Persistency_Common',
                          'art_Persistency_Provenance',
                          'art_Utilities',
                          'canvas',
                          'MF_MessageLogger',
                          'fhiclcpp',
                          'cetlib',
                          'cetlib_except',
                          'CLHEP',
                          'HepPID',
                          'Core',
                          'boost_filesystem',
                          'boost_system'
           ]
mainlib_cc = helper.mainlib_cc()
decorated_libname= "lib/lib" + helper.dict_libname()

env.DictionarySource( helper.dict_tmp_name(),
                     'classes.h', 
                      LIBNAME=decorated_libname, 
                      DEBUG_LEVEL=level )

mainlib_cc.append(helper.dict_tmp_name())

env.SharedLibrary( helper.prefixed_libname(),
                   mainlib_cc,
                   LIBS=[ userlibs ] )

helper.make_plugins( [ 'mu2e_EventDisplay',userlibs ] )

# This tells emacs to view this file in python mode.
# Local Variables:
# mode:python
# End:
