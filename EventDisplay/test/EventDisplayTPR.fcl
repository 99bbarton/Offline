#include "minimalMessageService.fcl"
#include "standardProducers.fcl"
#include "standardServices.fcl"

process_name : EventDisplay

source :
{
  module_type : RootInput
  fileNames   : [ "data_03.root" ] #that's the file that gets produced after running
                                   #Mu2eG4/test/g4test_03.fcl
                                   #replace it with your own file either here or in the command line
                                   #e.g. mu2e -c EventDisplay/test/EventDisplay.fcl myfile.root
}

services :
{
  message : @local::default_message
  TFileService : { fileName : "ED.root" }
  user :
  {
    GeometryService        : { inputFile : "Mu2eG4/test/geom_01.txt" }
    ConditionsService : { conditionsfile : "Mu2eG4/test/conditions_01.txt" }
    GlobalConstantsService : { inputFile : "Mu2eG4/test/globalConstants_01.txt" }
  }
}

physics :
{
  producers :
  {
     FSHPreStereo: @local::FSHPreStereo
     MakeStereoHits: @local::MakeStereoHits
     FlagStrawHits: @local::FlagStrawHits
     FlagBkgHits: @local::FlagBkgHits
# Tracking for some different particle types
     TPRDownstreameMinus : @local::TrkPatRecDownstreameMinus
     TPRDownstreamePlus : @local::TrkPatRecDownstreamePlus
     TPRUpstreameMinus : @local::TrkPatRecUpstreameMinus
     TPRUpstreamePlus : @local::TrkPatRecUpstreamePlus
     TPRDownstreammuMinus : @local::TrkPatRecDownstreammuMinus
     TPRDownstreammuPlus : @local::TrkPatRecDownstreammuPlus
     TPRUpstreammuMinus : @local::TrkPatRecUpstreammuMinus
     TPRUpstreammuPlus : @local::TrkPatRecUpstreammuPlus
  }
   analyzers:
  {
    eventdisplay:
    {
      module_type     : EventDisplay
      g4ModuleLabel   : "g4filter"
    }
  }

  p1 : [FSHPreStereo, MakeStereoHits, FlagStrawHits, FlagBkgHits, 
  TPRDownstreameMinus, TPRDownstreamePlus,TPRUpstreameMinus, TPRUpstreamePlus,
  TPRDownstreammuMinus, TPRDownstreammuPlus,TPRUpstreammuMinus, TPRUpstreammuPlus]
 
  e1 : [eventdisplay]
  
  trigger_paths  : [p1]
  end_paths      : [e1]
}





