#! /bin/bash
#
# Rebind an existing satellite release to the base release in which this file lives.
#
# The script takes an optional command line argument: the name of the
# setup file in the base release that you should source when you setup
# the base release.
#

set -e

source "$(dirname $0)/satelliteFuncs"

ensure_mu2e_environment

# If the optional argument has been specified, get it.
setupname="setup.sh"
if [ $# == 1 ]; then
  setupname=$1
fi

# The candidate base release will be the release in which we find this createSatelliteRelease script.
export candidate_base_release=`cd "$(dirname ${BASH_SOURCE})" >/dev/null 2>&1 && echo \$PWD | sed 's/\/bin//'`
ensure_legal_candidate_release ${candidate_base_release}

# Remove any object, library and binaries that will need to be rebuilt against the new release.
scons_clean
echo " "

# If any of the managed files exist, move them to a backup directory.
backup_managed_files

# Create the files/links/directories needed by this satellite release.
echo "Rebinding this satellite release to the base release: " ${candidate_base_release}
create_files "yes"

