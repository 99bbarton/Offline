#! /bin/bash
#
# Rebind an existing test release to the base release in which this file lives.
#
#  $Id: rebindTestRelease,v 1.1 2013/02/14 22:22:23 kutschke Exp $
#  $Author: kutschke $
#  $Date: 2013/02/14 22:22:23 $
#
# The script takes an optional command line argument: the name of the
# setup file in the base release that you should source when you setup
# the base release.
#

if [ "${MU2E}" = '' ];then
    echo "The environment variable MU2E is not set."
    echo "You must setup the local Mu2e environment before sourcing this script."
    return 1
fi

# The base release will be the release in which we find this rebindTestRelease script.
export candidate_base_release=`cd "$(dirname ${BASH_SOURCE})" >/dev/null 2>&1 && echo \$PWD | sed 's/\/bin//'`

# If a base release is already setup, then it must match the candidate_base_release.
if [ "${MU2E_BASE_RELEASE}" != '' ];then
    if [ "${MU2E_BASE_RELEASE}"  != "${candidate_base_release}" ]; then
      echo "You already have a Mu2e base release established:  " ${MU2E_BASE_RELEASE}
      echo "You are trying to rebind test release from a different base release: " ${candidate_base_release}
      echo "This is not permitted."
      echo "Stopping now."
      return 1
    fi
fi

# If the optional argument has been specified, get it.
setupname="setup.sh"
if [ $# == 1 ]; then
  setupname=$1
fi

# Save a copy of each file that will be overwritten.
# Stop if it is not safe to do so.
if [ -e oldBaseRelease ]; then
    echo "There is already a directory named oldBaseRelease."
    echo "This rebind script will create this directory and populate it but will not do so if it is already present."
    echo "Please remove or rename this directory and then rerun rebindTestRelease."
    echo "You must setup the local Mu2e environment before sourcing this script."
    return 1
fi
mkdir oldBaseRelease
mv SConstruct                oldBaseRelease
mv setup.sh                  oldBaseRelease

# All tests passed. Now rebind the test release.

# Copy some files from the base release.
echo "Rebinding the test release to the base release: " ${candidate_base_release}
cp ${candidate_base_release}/SConstruct .

# Create the setup script for the test release.
# Hardcode the path to the base release.
cat >> setup.sh <<EOF
#! /bin/bash
#
# This script was written by rebindTestRelease
# Normally you should not edit it.
#
#

# Connect to the base release.
source ${candidate_base_release}/${setupname}

export PATH="\`pwd\`/bin/:\${PATH}"
export LD_LIBRARY_PATH="\`pwd\`/lib/:\${LD_LIBRARY_PATH}"

EOF
