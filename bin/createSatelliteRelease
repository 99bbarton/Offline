#! /bin/bash
#
# Script to create a satellite release in the current directory.
#
# If /mu2e/data is visible, it will also create a matching output
# directory in /mu2e/data to hold output made by this release.
# That directory is visible as a symlink in the current directory.
#
# This script resides a base release and it will create a satellite
# release that builds against the base release in which this script
#
# The script takes an optional command line argument: the name of the
# setup file in the base release that you should source when you setup
# the base release.  By default it is "setup.sh".
#

set -e

source "$(dirname $0)/satelliteFuncs"

# If the optional argument has been specified, get it.
setupname="setup.sh"
if [ $# == 1 ]; then
  setupname=$1
fi

ensure_mu2e_environment

# The candidate base release will be the release in which we find this createSatelliteRelease script.
export candidate_base_release=`cd "$(dirname ${BASH_SOURCE})" >/dev/null 2>&1 && /bin/pwd | sed 's/\/bin//'`
ensure_legal_candidate_release ${candidate_base_release}

# Make sure that we will not overwrite existing files that are managed
# by the satellite release system.  If this test fails, it is the
# users responsibility to clean up and retry.
ensure_no_satellite_release_managed_files

create_files "yes"
