#include "minimalMessageService.fcl"
#include "standardServices.fcl"
#include "CRVResponse/fcl/prolog.fcl"

process_name : CRVResponse

source :
{
  module_type : RootInput
}

services :
{
  RandomNumberGenerator: { }
  user :
  {
    GeometryService        : { inputFile : "Mu2eG4/geom/geom_common.txt" }
    ConditionsService      : { conditionsfile : "Mu2eG4/test/conditions_01.txt" }
    GlobalConstantsService : { inputFile : "Mu2eG4/test/globalConstants_01.txt" }
    SeedService            : @local::automaticSeeds
  }
}

physics :
{
  producers:
  {
    protonTimeMap: { module_type : GenerateProtonTimes }
    muonTimeMap  : { module_type : GenerateMuonLife }

    @table::CrvResponsePackage.producers
  }

  an : [protonTimeMap, muonTimeMap, @sequence::CrvResponsePackage.CrvResponseSequence]
  out: [Output]

  end_paths: [an, out]
}

outputs: 
{
  Output : 
  {
    module_type : RootOutput
    fileName    : "data_crv.art"
  }
}

services.user.SeedService.baseSeed         :  773651
services.user.SeedService.maxUniqueEngines :  20

