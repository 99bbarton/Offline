BEGIN_PROLOG

    CrvPhotons:
    {
      module_type               : CrvPhotonGenerator
      g4ModuleLabels            : ["*"]
      processNames              : ["*"]
      CRVSectors                : ["R1","R2","R3","R4","R5","R6","L1","L2","L3","T1","T2","T3","T4","T5","T6","D1","U" ,"C1","C2","C3","D2","D3"] //used only to match the vector entries below
      lookupTableFileNames      : ["CRVConditions/v3_0/LookupTable_4500", //R1
                                   "CRVConditions/v3_0/LookupTable_4500", //R2
                                   "CRVConditions/v3_0/LookupTable_4500", //R3
                                   "CRVConditions/v3_0/LookupTable_4500", //R4
                                   "CRVConditions/v3_0/LookupTable_4500", //R5
                                   "CRVConditions/v3_0/LookupTable_4500", //R6
                                   "CRVConditions/v3_0/LookupTable_4500", //L1
                                   "CRVConditions/v3_0/LookupTable_4500", //L2
                                   "CRVConditions/v3_0/LookupTable_4500", //L3
                                   "CRVConditions/v3_0/LookupTable_6600", //T1
                                   "CRVConditions/v3_0/LookupTable_6600", //T2
                                   "CRVConditions/v3_0/LookupTable_5600", //T3
                                   "CRVConditions/v3_0/LookupTable_5600", //T4
                                   "CRVConditions/v3_0/LookupTable_5600", //T5
                                   "CRVConditions/v3_0/LookupTable_5600", //T6
                                   "CRVConditions/v3_0/LookupTable_5600", //D1
                                   "CRVConditions/v3_0/LookupTable_6600", //U
                                   "CRVConditions/v3_0/LookupTable_900",  //C1
                                   "CRVConditions/v3_0/LookupTable_900",  //C2
                                   "CRVConditions/v3_0/LookupTable_900",  //C3
                                   "CRVConditions/v3_0/LookupTable_2300", //D2
                                   "CRVConditions/v3_0/LookupTable_2300"] //D3
      scintillationYield        : 6697     //6697 photons per MeV corresponds to a PE yield of 48 PEs/cm @ 1m away from SiPMs
                                           //scintillation yield = 146.178 (photons/MeV)/(PEs/cm) * PE yield - 319.19 photons/MeV, 
                                           //where PE yield is the number of PEs per cm @ 1m away from SiPMs
//      scintillationYield        : 5820     //beam on (42 PEs/cm) without safety factor
//      scintillationYield        : 4797     //end of run (35 PEs/cm) without safety factor
      scintillationYieldVariation       : 0.2   //gaussian distribution with sigma equal to 20% of the mean
      scintillationYieldVariationCutoff : 0.4   //the scintillation yield variation is cut off at 40% below the mean
      scintillatorBirksConstant : 0.126    //0.126 mm/Mev
      scintillatorRatioFastSlow : 1.0      //100% fast
      scintillatorDecayTimeFast : 3.0      //3.0 ns   //includes WLS component in the scintillator
      scintillatorDecayTimeSlow : 100.0    //100.0 ns  //unknown, not used
      fiberDecayTime            : 7.4      //7.4 ns
      startTime                 : 400.0    //0.0 ns
      visibleEnergyAdjustmentFileName : "CRVResponse/fcl/visibleEnergyAdjustment.txt"
      timeOffsets               : { inputs : [ "protonTimeMap", "muonTimeMap" ] }
    }
    CrvSiPMCharges:
    {
      module_type                  : CrvSiPMChargeGenerator
      crvPhotonsModuleLabel        : "CrvPhotons"
      deadSiPMProbability          : 0.01
      nPixelsX                     : 40
      nPixelsY                     : 40
      nPixelsRFiber                : 14
      inactivePixels               : [ [18,18], [18,19], [18,20], [18,21],
                                       [19,18], [19,19], [19,20], [19,21],
                                       [20,18], [20,19], [20,20], [20,21],
                                       [21,18], [21,19], [21,20], [21,21] ]
      overvoltage                  : 2.1        //V
      timeConstant                 : 12.0       //ns  ????
      capacitance                  : 8.84e-14   //F
      blindTime                    : 500.0      //ns

      AvalancheProbParam1          : 0.65       // = p1  //needs to be changed to 1.49 after the (wavelength depending) quantum efficiency and fill factor 
                                                         //has been taken included in the lookup table generator
                                                         //the value of 0.65 is used for the time being to keep the avalanche probability at 0.35,
                                                         //which is the value which has been used for the past couple of months
      AvalancheProbParam2          : 2.7        // = p2
                                                //from the SiPM specs for 450nm with 3.0v overvoltage
                                                //(the quantum eficiency and the fill factor has been taken care of by the photon generator
                                                //Avalanche probability at over voltage v: p1*(1 - exp(-v/p2))

      TrapType0Prob                : 0.0        //0.14 (Paul's number)  ????
      TrapType1Prob                : 0.0        //0.06 (Paul's number)  ????
      TrapType0Lifetime            : 5.0        //ns  ????
      TrapType1Lifetime            : 50.0       //ns  ????

      ThermalRate                  : 3.0e-4     //ns^-1     0.3MHz for entire SiPM 
      CrossTalkProb                : 0.05       //should be 0.04, but the value of 0.05 was used for the past couple of months
    }
    CrvWaveforms:
    {
      module_type                  : CrvWaveformsGenerator
      crvSiPMChargesModuleLabel    : "CrvSiPMCharges"
      singlePEWaveformFileName     : "CRVResponse/fcl/singlePEWaveform_v2.txt"
      singlePEWaveformPrecision    : 0.5    //0.5 ns
      singlePEWaveformMaxTime      : 100    //100 ns
      singlePEReferenceCharge      : 1.8564e-13  //1.8564e-13 C charge which was used to generate the above 1PE waveform
      digitizationPrecision        : 12.5   //12.5 ns (digitizer sampling rate)
      digitizationPoints           : 8      //8 points
      FEBtimeSpread                : 2.0    //2.0 ns
      minVoltage                   : 0.03123 //31.23mV (corresponds to 5.5PE) using dark current calibration
      noise                        : 4.0e-4 //0.4mV
    }
    CrvDigi:
    {
      module_type                  : CrvDigitizer
      crvWaveformsModuleLabel      : "CrvWaveforms"
      ADCconversionFactor          : 2000  //2000 ADC/V
      pedestal                     : 100
    }
    CrvRecoPulses:
    {
      module_type               : CrvRecoPulsesFinder
      crvDigiModuleLabel        : "CrvDigi"
      calibrationFactor         : 11.28    //11.28 ADC/PE
      pedestal                  : 100.42   //0.42 ADC      //from dark current calibration: pulse height = scale * PE + offset
      usePulseArea              : false    //not used in test beam analysis
      minPEs                    : 6        //6 PEs
    }
    CrvCoincidence:
    {
      module_type                   : CrvCoincidenceCheck
      verboseLevel                  : 1
      crvRecoPulsesModuleLabel      : "CrvRecoPulses"
      CRVSectors                    : ["R1","R2","R3","R4","R5","R6","L1","L2","L3","T1","T2","T3","T4","T5","T6","D1","U" ,"C1","C2","C3","D2","D3"] //used only to match the vector entries below
      PEthresholds                  : [ 22 , 22 , 22 , 22 , 22 , 22 , 22 , 22 , 22 , 16 , 16 , 18 , 18 , 18 , 18,  22 , 16 , 18 , 18 , 18 , 22 , 22 ] //beam on
//      PEthresholds                  : [ 18 , 18 , 18 , 18 , 18 , 18 , 18 , 18 , 18 , 12 , 12 , 14 , 14 , 14 , 14 , 18 , 12 , 14 , 14 , 14 , 18 , 18 ] //end of run
      adjacentPulseTimeDifferences  : [  5 ,  5 ,  5 ,  5 ,  5 ,  5 ,  5 ,  5 ,  5 , 10 , 10 ,  5 ,  5 ,  5 ,  5 ,  5 , 10 ,  5 ,  5 ,  5 ,  5 ,  5 ] //ns
      maxTimeDifferences            : [ 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 20 , 20 , 10 , 10 , 10 , 10 , 10 , 20 , 10 , 10 , 10 , 10 , 10 ] //ns
      maxSlope                      : 7.0    //7.0mm over 1mm, which is a little bit more than 4 counters per layer
      maxSlopeDifference            : 2.0    //
      acceptThreeAdjacentCounters   : false  //use hits in three adjacent counters in one layer to form a coincidence
      timeWindowStart               : 500    //ns
      timeWindowEnd                 : 1750   //ns
      leadingVetoTime               : 0      //the time window before the first hit time of the coincidence triplet (only used to print out the results)
      trailingVetoTime              : 125    //the time window after the last hit time of the coincidence triplet (only used to print out the results)
    }
    CrvCoincidenceClusterFinder:
    {
      module_type                    : CrvCoincidenceClusterFinder
      verboseLevel                   : 1
      maxDistance                    : 1000 //mm
      maxTimeDifference              : 100  //ns
      crvCoincidenceCheckModuleLabel : "CrvCoincidence"
      timeWindowStart                : 500  //ns
      timeWindowEnd                  : 1750 //ns
      deadTimeWindowStartMargin      : 0    //ns
      deadTimeWindowEndMargin        : 125  //ns
    }

CrvResponsePackage : 
{
   producers : 
   {
     CrvPhotons                  : @local::CrvPhotons
     CrvSiPMCharges              : @local::CrvSiPMCharges
     CrvWaveforms                : @local::CrvWaveforms
     CrvDigi                     : @local::CrvDigi
     CrvRecoPulses               : @local::CrvRecoPulses
     CrvCoincidence              : @local::CrvCoincidence
     CrvCoincidenceClusterFinder : @local::CrvCoincidenceClusterFinder
   }
   CrvResponseSequence : [ CrvPhotons, CrvSiPMCharges, CrvWaveforms, CrvDigi, CrvRecoPulses, CrvCoincidence, CrvCoincidenceClusterFinder ]
}

CrvDAQPackage : 
{
   producers : 
   {
     CrvPhotons                  : @local::CrvPhotons
     CrvSiPMCharges              : @local::CrvSiPMCharges
     CrvWaveforms                : @local::CrvWaveforms
     CrvDigi                     : @local::CrvDigi
   }
   CrvResponseSequence : [ CrvPhotons, CrvSiPMCharges, CrvWaveforms, CrvDigi ]
}

END_PROLOG
