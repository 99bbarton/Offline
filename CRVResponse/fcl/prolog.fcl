BEGIN_PROLOG

    CrvPhotonArrivals:
    {
      module_type               : CrvPhotonArrivalsGenerator
      g4ModuleLabels            : ["*"]
      processNames              : ["*"]
      lookupTableFileNames      : ["CRVConditions/v2_0/LookupTable_6600",
                                   "CRVConditions/v2_0/LookupTable_5600",
                                   "CRVConditions/v2_0/LookupTable_4500",
                                   "CRVConditions/v2_0/LookupTable_3000",
                                   "CRVConditions/v2_0/LookupTable_2300",
                                   "CRVConditions/v2_0/LookupTable_900"]
      lookupTableCounterLengths : [6600,5600,4500,3000,2300,900]
      scintillationYield        : 8500.0   //8500.0 photons per MeV (corresponds to 55.6 PE/SiPM @ 1m away from counter)
      scintillationYieldTolerance :  0.0   //0%
      scintillatorBirksConstant : 0.126    //0.126 mm/Mev
      scintillatorRatioFastSlow : 1.0      //100% fast
      scintillatorDecayTimeFast : 3.0      //3.0 ns   //includes WLS component in the scintillator
      scintillatorDecayTimeSlow : 100.0    //100.0 ns  //unknown, not used
      fiberDecayTime            : 7.4      //7.4 ns
      startTime                 : 400.0    //0.0 ns
    }
    CrvSiPMResponses:
    {
      module_type                  : CrvSiPMResponsesGenerator
      crvPhotonArrivalsModuleLabel : "CrvPhotonArrivals"
      deadSiPMProbability          : 0.01
      numberPixels                 : 1584
      numberPixelsAtFiber          : 615
      bias                         : 2.4        //V
      scaleFactor                  : 0.08
      blindTime                    : 500.0      //ns

      GeigerProbCoef               : 1.0        // = pc
      GeigerProbVoltScale          : 5.5        // = vs
                                                //from the SiPM specs:
                                                //Geiger probability at over voltage v = 2.4V (bias voltage): 
                                                //0.35 = 1 - exp(-pow(v,pc)/vs)
                                                //Geiger probability at over voltage v = 1.0V: 
                                                //0.17 = 1 - exp(-pow(v,pc)/vs)

      TrapType0Prob                : 0.0        //0.14       //trap_prob*trap_type0_prob=0.2*0.7
      TrapType1Prob                : 0.0        //0.06       //trap_prob*trap_type1_prob=0.2*0.3
      TrapType0Lifetime            : 5.0        //ns
      TrapType1Lifetime            : 50.0       //ns

      ThermalProb                  : 2.9e-3     //ns^-1     1MHz/GeigerProb at SiPM --> 2.9e6 s^-1 = 2.9e-3 ns^-1 

      PhotonProduction             : 0.136      // = p (photon probability with every charge release)
                                                //total cross talk probability cp:
                                                //use probability to release a charge r = 0.35 (Geiger probability)
                                                //cp = p*r + (p*r)^2 + (p*r)^3 + ... = 0.05
    }
    CrvWaveforms:
    {
      module_type                  : CrvWaveformsGenerator
      crvSiPMResponsesModuleLabel  : "CrvSiPMResponses"
      singlePEWaveformFileName     : "CRVResponse/fcl/singlePEWaveform.txt"
      singlePEWaveformPrecision    : 0.5    //0.5 ns
      singlePEWaveformMaxTime      : 100    //100 ns
      digitizationPrecision        : 12.5   //12.5 ns (digitizer sampling rate)
      digitizationPoints           : 8      //8 points
      FEBtimeSpread                : 2.0    //2.0 ns
      minVoltage                   : 0.022  //22mV (corresponds to 3.5PE)
    }
    CrvRecoPulses:
    {
      module_type               : CrvRecoPulsesFinder
      crvWaveformsModuleLabel   : "CrvWaveforms"
      param0                    : 0.0      //0.0
      param1                    : 162.0    //162.0  (would be about 100.0 if all PEs arrived at the same time)
      pulseThreshold            : 0.005    //5mV  //for integral
      leadingEdgeThreshold      : 0.2      //20% of the maximum bin
      minPEs                    : 4        //4 PEs
    }
    CrvCoincidence:
    {
      module_type                   : CrvCoincidenceCheck
      verboseLevel                  : 1
      crvRecoPulsesModuleLabel      : "CrvRecoPulses"
      CRVSectors                    : ["R1","R2","R3","R4","R5","R6","L1","L2","L3","T1","T2","T3","T4","D1","U" ,"C1","C2","C3","D2","D3","D4"] //used only to match the vector entries below
      PEthresholds                  : [ 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 ]
      adjacentPulseTimeDifferences  : [  5 ,  5 ,  5 ,  5 ,  5 ,  5 ,  5 ,  5 ,  5 , 10 ,  5 ,  5 ,  5 ,  5 , 10 ,  5 ,  5 ,  5 ,  5 ,  5 ,  5 ] //ns
      maxTimeDifferences            : [ 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 50 , 10 , 10 , 10 , 10 , 50 , 10 , 10 , 10 , 10 , 10 , 10 ] //ns
      maxSlope                      : 7.0    //7.0mm over 1mm, which is a little bit more than 4 counters per layer
      maxSlopeDifference            : 2.0    //
      acceptThreeAdjacentCounters   : false  //use hits in three adjacent counters in one layer to form a coincidence
      timeWindowStart               : 550    //ns
      timeWindowEnd                 : 1750   //1695ns  //if timeWindowEnd > microbunch period (1695), then the time window loops back to the begining (0)
      leadingVetoTime               : 0      //the time window before the first hit time of the coincidence triplet (only used to print out the results)
      trailingVetoTime              : 125    //the time window after the last hit time of the coincidence triplet (only used to print out the results)
    }


CrvResponsePackage : 
{
   producers : 
   {
     CrvPhotonArrivals: @local::CrvPhotonArrivals
     CrvSiPMResponses : @local::CrvSiPMResponses
     CrvWaveforms     : @local::CrvWaveforms
     CrvRecoPulses    : @local::CrvRecoPulses
     CrvCoincidence   : @local::CrvCoincidence
   }
   CrvResponseSequence : [ CrvPhotonArrivals, CrvSiPMResponses, CrvWaveforms, CrvRecoPulses, CrvCoincidence ]
}

END_PROLOG
