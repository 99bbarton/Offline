# -*- mode: tcl -*-
#------------------------------------------------------------------------------
# this file is included by fcl/standardProducers.fcl inside the PROLOG section
#------------------------------------------------------------------------------
#include "TrkPatRec/fcl/Particle.fcl"
#include "TrkPatRec/fcl/PanelAmbigResolver.fcl"
BEGIN_PROLOG

# this should go in a general file FIXME!!
FitDir : {
  downstream : 0
  upstream : 1
}

# time clustering is the 1st stage of track finding 
TimeClusterFinder : {
  module_type               : TimeClusterFinder
  PeakCleanMVA : { MVAWeights : "TrkPatRec/test/TimePeak.weights.xml" }
  ComboHitCollection : "makePH"
  StrawHitFlagCollection : "FlagBkgHits:StrawHits"
  TestFlag : true
}

RobustHelixFinder : {
   module_type		: RobustHelixFinder
   ComboHitCollection : "makePH"
   TimeClusterCollection : "TimeClusterFinder"
   HelixStereoHitMVA : { MVAWeights : "TrkPatRec/test/HelixStereoHitMVA.weights.xml" }
   HelixNonStereoHitMVA : { MVAWeights : "TrkPatRec/test/HelixNonStereoHitMVA.weights.xml" }
}
#same for trigger
TTtimeClusterFinder : {
  module_type               : TimeClusterFinder
  PeakCleanMVA : { MVAWeights : "TrkPatRec/test/TimePeak.weights.xml" }
  ComboHitCollection : "TTmakePH"
  TestFlag : true
}

TTrobustHelixFinder : {
   module_type		: RobustHelixFinder
   ComboHitCollection : "TTmakePH"
   TimeClusterCollection : "TTtimeClusterFinder"
   HelixStereoHitMVA : { MVAWeights : "TrkPatRec/test/HelixStereoHitMVA.weights.xml" }
   HelixNonStereoHitMVA : { MVAWeights : "TrkPatRec/test/HelixNonStereoHitMVA.weights.xml" }
}
# pattern recognition internals
# Kalman fit configuration for the seed fit (least squares configuration of Kalman fit)
KFSeed : {
  MaxIterations                   : 3
  fieldCorrection	      	  : false
  materialCorrection              : false
  seedsmear       		  : 10000
  maxhitchi                       : 5.0
  # interate the fit twice: once at the physical size of the straw, once at its RMS
    #  hiterr                          : [ 5.0, 1.44 ]
  # time external error, assuming s drift velocity of 62.5 #mu m / ns
  hiterr                          : [ 80., 23.04]
  ambiguityStrategy       	  : [ 0  , 0    ]
  t0Tolerance			  : [ 5.0, 5.0  ]
  weedhits			  : [ true, true ]
  ResolveAfterWeeding		  : false
  AddMaterial			  : [ false, false ]
#  initT0			  : true
  initT0			  : false 
  useTrkCaloHit                   : false
  updateT0			  : false
  dtOffset                        : @local::TrackCaloMatching.DtOffset
  strawHitT0Weight                : 1
  caloHitT0Weight                 : 10
}

# Kalman fit configuration for the final track fit.  This also runs the simulated annealing
KFFinal : {
  materialCorrection          : true
  fieldCorrection	      : true
  initT0		      : false
  useTrkCaloHit               : false
  ResolveAfterWeeding	      : false
  # time external error, assuming s drift velocity of 62.5 #mu m / ns
#  hiterr                      : [ 5.0, 1.5, 0.5, 0.25, 0.125, 0.05, 0.0, 0.0, 0.0]
  hiterr                      : [ 80., 24., 8., 4., 2., 0.8, 0.0, 0.0, 0.0]
  t0Tolerance                 : [ 2.0, 1.0, 1.0, 1.0 , 0.5  , 0.5 , 0.2, 0.2, 0.1]
# specific choices for ambiguity resolution
  weedhits		      : @local::PanelAmbig.Weed
  AddMaterial		      : [ false, false, false, true, false, false, false, true, true ]
  PanelAmbigResolver          : @local::PanelAmbig.Resolver
  ambiguityStrategy           : @local::PanelAmbig.Strategy
# Extend downstream to the calorimeter by default
  DownstreamExtent	      : 3
  dtOffset                    : @local::TrackCaloMatching.DtOffset
  strawHitT0Weight            : 1
  caloHitT0Weight             : 10
}

# Seed fit; this is really a least-squares fit, but uses the Kalman infrastructure
KSF : {
  module_type                 : KalSeedFit
  StrawHitCollection	      : "makeSH"
  StrawHitFlagCollection      : "FlagBkgHits:StrawHits"
  SeedCollection	      : "RobustHelixFinder"
  KalFit		      : @local::KFSeed
  ParameterErrors	      : [10.0,0.05,0.001,10.0,0.05]
#  ParameterErrors	      : [1.0,1.0,1.0,1.0,1.0]
  MaxAddDoca                  : 7.    # mm
  MaxAddChi                   : 5.    # normalized unit
  rescueHits                  : 0     # turned off 
}
# Final Kalman fit, including material and magnetic inhomogeneity effects
KFF : {
  module_type                 : KalFinalFit
  StrawHitCollection	      : "makeSH"
  StrawHitFlagCollection      : "FlagBkgHits:StrawHits"
  KalFit		      : @local::KFFinal
  GoodKallSeedFitBits	      : ["SeedOK"]
  AddHitSelectionBits	      : []
  AddHitBackgroundBits	      : []
}
# same for trigger
TTKSF : {
  module_type                 : KalSeedFit
  StrawHitCollection	      : "TTmakeSH"
  StrawHitFlagCollection      : "TTflagBkgHits:StrawHits"
  SeedCollection	      : "TTrobustHelixFinder"
  KalFit		      : @local::KFSeed
  ParameterErrors	      : [10.0,0.05,0.001,10.0,0.05]
#  ParameterErrors	      : [1.0,1.0,1.0,1.0,1.0]
  MaxAddDoca                  : 7.    # mm
  MaxAddChi                   : 5.    # normalized unit
  rescueHits                  : 0     # turned off 
}
# Final Kalman fit, including material and magnetic inhomogeneity effects
TTKFF : {
  module_type                 : KalFinalFit
  StrawHitCollection	      : "TTmakeSH"
  StrawHitFlagCollection      : "TTflagBkgHits:StrawHits"
  SeedCollection	      : "TTkalSeedFit"
  KalFit		      : @local::KFFinal
  GoodKallSeedFitBits	      : ["SeedOK"]
  AddHitSelectionBits	      : []
  AddHitBackgroundBits	      : []
}

# seed Fit configuration for specific particles
#  First, downstream electrons
KSFDeM			      : @local::KSF
KSFDeM.SeedCollection      : "HelixFinder:Positive"
KSFDeM.fitparticle	      : @local::Particle.eminus
KSFDeM.fitdirection	      : @local::FitDir.downstream 
# upstream electrons
KSFUeM			      : @local::KSF
KSFUeM.SeedCollection      : "HelixFinder:Negative"
KSFUeM.fitparticle	      : @local::Particle.eminus
KSFUeM.fitdirection	      : @local::FitDir.upstream 
#  downstream positrons
KSFDeP			      : @local::KSF
KSFDeP.SeedCollection      : "HelixFinder:Negative"
KSFDeP.fitparticle	      : @local::Particle.eplus
KSFDeP.fitdirection	      : @local::FitDir.downstream 
# upstream positrons
KSFUeP			      : @local::KSF
KSFUeP.SeedCollection      : "HelixFinder:Positive"
KSFUeP.fitparticle	      : @local::Particle.eplus
KSFUeP.fitdirection	      : @local::FitDir.upstream 
# downstream mu minus
KSFDmuM			      : @local::KSF
KSFDmuM.SeedCollection     : "HelixFinder:Positive"
KSFDmuM.fitparticle	      : @local::Particle.muminus
KSFDmuM.fitdirection	      : @local::FitDir.downstream 
# upstream mu minus
KSFUmuM			      : @local::KSF
KSFUmuM.SeedCollection     : "HelixFinder:Negative"
KSFUmuM.fitparticle	      : @local::Particle.muminus
KSFUmuM.fitdirection	      : @local::FitDir.upstream 
# downstream mu plus
KSFDmuP			      : @local::KSF
KSFDmuP.SeedCollection     : "HelixFinder:Negative"
KSFDmuP.fitparticle	      : @local::Particle.muplus
KSFDmuP.fitdirection	      : @local::FitDir.downstream 
# upstream mu plus
KSFUmuP			      : @local::KSF
KSFUmuP.SeedCollection     : "HelixFinder:Positive"
KSFUmuP.fitparticle	      : @local::Particle.muplus
KSFUmuP.fitdirection	      : @local::FitDir.upstream 
# downstream pi minus
KSFDpiM			      : @local::KSF
KSFDpiM.SeedCollection     : "HelixFinder:Positive"
KSFDpiM.fitparticle	      : @local::Particle.piminus
KSFDpiM.fitdirection	      : @local::FitDir.downstream 
# upstream pi minus
KSFUpiM			      : @local::KSF
KSFUpiM.SeedCollection     : "HelixFinder:Negative"
KSFUpiM.fitparticle	      : @local::Particle.piminus
KSFUpiM.fitdirection	      : @local::FitDir.upstream 
# downstream pi plus
KSFDpiP			      : @local::KSF
KSFDpiP.SeedCollection     : "HelixFinder:Negative"
KSFDpiP.fitparticle	      : @local::Particle.piplus
KSFDpiP.fitdirection	      : @local::FitDir.downstream 
# upstream pi plus
KSFUpiP			      : @local::KSF
KSFUpiP.SeedCollection     : "HelixFinder:Positive"
KSFUpiP.fitparticle	      : @local::Particle.piplus
KSFUpiP.fitdirection	      : @local::FitDir.upstream

# Final Fit configuration for specific particles
#  First, downstream electrons
KFFDeM			      : @local::KFF
KFFDeM.SeedCollection      : "KSFDeM"
KFFDeM.fitparticle	      : @local::Particle.eminus
KFFDeM.fitdirection	      : @local::FitDir.downstream 
# upstream electrons
KFFUeM			      : @local::KFF
KFFUeM.SeedCollection      : "KSFUeM"
KFFUeM.fitparticle	      : @local::Particle.eminus
KFFUeM.fitdirection	      : @local::FitDir.upstream 
#  downstream positrons
KFFDeP			      : @local::KFF
KFFDeP.SeedCollection      : "KSFDeP"
KFFDeP.fitparticle	      : @local::Particle.eplus
KFFDeP.fitdirection	      : @local::FitDir.downstream 
# upstream positrons
KFFUeP			      : @local::KFF
KFFUeP.SeedCollection      : "KSFUeP"
KFFUeP.fitparticle	      : @local::Particle.eplus
KFFUeP.fitdirection	      : @local::FitDir.upstream 
# downstream mu minus
KFFDmuM			      : @local::KFF
KFFDmuM.SeedCollection     : "KSFDmuM"
KFFDmuM.fitparticle	      : @local::Particle.muminus
KFFDmuM.fitdirection	      : @local::FitDir.downstream 
# upstream mu minus
KFFUmuM			      : @local::KFF
KFFUmuM.SeedCollection     : "KSFUmuM"
KFFUmuM.fitparticle	      : @local::Particle.muminus
KFFUmuM.fitdirection	      : @local::FitDir.upstream 
# downstream mu plus
KFFDmuP			      : @local::KFF
KFFDmuP.SeedCollection     : "KSFDmuP"
KFFDmuP.fitparticle	      : @local::Particle.muplus
KFFDmuP.fitdirection	      : @local::FitDir.downstream 
# upstream mu plus
KFFUmuP			      : @local::KFF
KFFUmuP.SeedCollection     : "KSFUmuP"
KFFUmuP.fitparticle	      : @local::Particle.muplus
KFFUmuP.fitdirection	      : @local::FitDir.upstream 
# downstream pi minus
KFFDpiM			      : @local::KFF
KFFDpiM.SeedCollection     : "KSFDpiM"
KFFDpiM.fitparticle	      : @local::Particle.piminus
KFFDpiM.fitdirection	      : @local::FitDir.downstream 
# upstream pi minus
KFFUpiM			      : @local::KFF
KFFUpiM.SeedCollection     : "KSFUpiM"
KFFUpiM.fitparticle	      : @local::Particle.piminus
KFFUpiM.fitdirection	      : @local::FitDir.upstream 
# downstream pi plus
KFFDpiP			      : @local::KFF
KFFDpiP.SeedCollection     : "KSFDpiP"
KFFDpiP.fitparticle	      : @local::Particle.piplus
KFFDpiP.fitdirection	      : @local::FitDir.downstream 
# upstream pi plus
KFFUpiP			      : @local::KFF
KFFUpiP.SeedCollection     : "KSFUpiP"
KFFUpiP.fitparticle	      : @local::Particle.piplus
KFFUpiP.fitdirection	      : @local::FitDir.upstream

# Declare a table with all the modules needed for track reconstruction
# This should be divided into sim, reco FIXME!
Tracking : {
  producers : {
# the following should be independently sourced FIXME!
    TimeClusterFinder  : @local::TimeClusterFinder
    HelixFinder  : @local::RobustHelixFinder
# now all the different track fits based on these inputs
# First, seed fits
    KSFDeM	  : @local::KSFDeM
    KSFUeM	  : @local::KSFUeM
    KSFDeP	  : @local::KSFDeP
    KSFUeP	  : @local::KSFUeP
    KSFDmuM	  : @local::KSFDmuM
    KSFUmuM	  : @local::KSFUmuM
    KSFDmuP	  : @local::KSFDmuP
    KSFUmuP	  : @local::KSFUmuP
    KSFDpiM	  : @local::KSFDpiM
    KSFUpiM	  : @local::KSFUpiM
    KSFDpiP	  : @local::KSFDpiP
    KSFUpiP	  : @local::KSFUpiP
# Final Kalman fit
    KFFDeM	  : @local::KFFDeM
    KFFUeM	  : @local::KFFUeM
    KFFDeP	  : @local::KFFDeP
    KFFUeP	  : @local::KFFUeP
    KFFDmuM	  : @local::KFFDmuM
    KFFUmuM	  : @local::KFFUmuM
    KFFDmuP	  : @local::KFFDmuP
    KFFUmuP	  : @local::KFFUmuP
    KFFDpiM	  : @local::KFFDpiM
    KFFUpiM	  : @local::KFFUpiM
    KFFDpiP	  : @local::KFFDpiP
    KFFUpiP	  : @local::KFFUpiP
  }
  # now for triggering
  TrkTrigger : {
    producers : {
      TTtimeClusterFinder  : @local::TTtimeClusterFinder
      TThelixFinder  : @local::TTrobustHelixFinder
    }
  }

# production sequence to find helices
  FindHelices : [ TimeClusterFinder, HelixFinder ]
# define standard outputs 
  Output : {
    Digis : [ "keep mu2e::StrawDigis_*_*_*" ]
    Hits : [ "keep mu2e::StrawHitFlagDetailmu2e::BitMaps_FlagBkgHits_*_*",
	 "keep mu2e::StrawHitPositions_MakeStereoHits_*_*",
	  "keep mu2e::StrawHits_*_*_*"	]

    Tracks : [ "keep mu2e::StrawHitFlagDetailmu2e::BitMaps_*_*_*",
	  "keep mu2e::TrkQualDetailmu2e::MVAStructs_*_*_*",
	  "keep mu2e::KalSeeds_*_*_*",
	   "keep mu2e::HelixSeeds_*_*_*",
	    "keep mu2e::TimeClusters_*_*_*" ]

    MCTracks : ["keep mu2e::GenParticles_*_*_*",
		"keep mu2e::SimParticlesmv_*_*_*" ]
    MCDigis : ["keep mu2e::StrawDigiMCs_makeSD_*_*"]
    MCHits : [ "keep mu2e::StepPointMCs_detectorFilter_tracker_*",
	      "keep mu2e::StepPointMCs_detectorFilter_virtualdetector_*"]

  }
}
# production sequences for tracking specific paricles; first electrons
Tracking.TPRDeM  : [ TimeClusterFinder, HelixFinder, KSFDeM, KFFDeM ]
Tracking.TPRUeM  : [ TimeClusterFinder, HelixFinder, KSFUeM, KFFUeM ]
Tracking.TPRDeP  : [ TimeClusterFinder, HelixFinder, KSFDeP, KFFDeP ]
Tracking.TPRUeP  : [ TimeClusterFinder, HelixFinder, KSFUeP, KFFUeP ]
#muons
Tracking.TPRDmuM  : [ TimeClusterFinder, HelixFinder, KSFDmuM, KFFDmuM ]
Tracking.TPRUmuM  : [ TimeClusterFinder, HelixFinder, KSFUmuM, KFFUmuM ]
Tracking.TPRDmuP  : [ TimeClusterFinder, HelixFinder, KSFDmuP, KFFDmuP ]
Tracking.TPRUmuP  : [ TimeClusterFinder, HelixFinder, KSFUmuP, KFFUmuP ]
#pions
Tracking.TPRDpiM  : [ TimeClusterFinder, HelixFinder, KSFDpiM, KFFDpiM ]
Tracking.TPRUpiM  : [ TimeClusterFinder, HelixFinder, KSFUpiM, KFFUpiM ]
Tracking.TPRDpiP  : [ TimeClusterFinder, HelixFinder, KSFDpiP, KFFDpiP ]
Tracking.TPRUpiP  : [ TimeClusterFinder, HelixFinder, KSFUpiP, KFFUpiP ]

END_PROLOG
