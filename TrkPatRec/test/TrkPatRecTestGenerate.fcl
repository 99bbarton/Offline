#
#  This script generates a CE event and runs hit and track reconstruction
# for example, the command
#  > mu2e --config TrkPatRecTest.fcl --nevts 100
# will generate 100 CE events, reconstruct the tracks, and produce the standard KalDiag TTree for those tracks
#
# David Brown, 13 Nov, 2015
#
#include "minimalMessageService.fcl"
#include "standardProducers.fcl"
#include "standardServices.fcl"
#include "TrkDiag/fcl/KalDiag.fcl"

process_name : TrkPatRecTest

source :
{
  module_type: EmptyEvent
}

services :
{
  message : @local::default_message
  TFileService : { fileName : "TrkPatRecTestGenerate.root" }
  RandomNumberGenerator: { }
  GeometryService        : { inputFile : "Mu2eG4/test/geom_cd3.txt" }
  ConditionsService : { conditionsfile : "Mu2eG4/test/conditions_01.txt" }
  GlobalConstantsService : { inputFile : "Mu2eG4/test/globalConstants_01.txt" }
  user : { 
    SeedService: @local::automaticSeeds
  }
  G4Helper               : { }
  BTrkHelper : @local::BTrkHelperDefault
}

physics :
{
  producers : {
    generate : @local::generate
    g4run : @local::g4run
    genCounter: {  module_type: GenEventCounter  }
    @table::EventMixing.producers
    @table::Tracking.producers
  }
  analyzers : {
# count generated events
      genCountLogger : { module_type: GenEventCountReader }
# read Kalman fit DownstreameMinus tracks and create default KalDiag TTree
# Note that the module labels and keys for the data products may be different
# if you are reading files.
      RKFDownstreameMinus: {
         module_type : ReadKalFits
         fitterModuleLabel : KFFDeM
	 KalDiag : @local::KalDiagDirect # configure KalDiag to look for directly (inline) generated data products
      }
   }
# trigger path; this generates the CE, creates hits from MCSteps, then reconstructs the tracks
p1: [ generate, g4run, genCounter,
      @sequence::EventMixing.TimeMaps,
      @sequence::Tracking.DigiSim,
      @sequence::Tracking.TPRDeM ]
# end path
  e1 : [RKFDownstreameMinus, genCountLogger]
  
  trigger_paths  : [p1]
  end_paths      : [e1]
}

# configure the generator.  Note that the muon stop file must be current
physics.producers.g4run.enableSD : [ tracker,  virtualdetector ]
physics.producers.g4run.sensitiveVolumes: []
physics.producers.generate.module_type : StoppedMuonConversionGun
physics.producers.generate.muonStops.inputFiles: [ "mergedMuonStops/nts.mu2e.cd3-beam-nts3-tgtstops.0506a_0728a_0825a.001002_00000000.root"]
physics.producers.generate.muonStops.branchName: "stops"
physics.producers.generate.muonStops.treeName: "stoppedMuonDumper/stops"
physics.producers.generate.muonStops.verbosityLevel: 1
physics.producers.generate.verbosityLevel : 1

# the following are needed for interactive running.  They will be overwritten if you submit this job
# on the grid with mu2eart and do not need to be removed.
services.user.SeedService.baseSeed         :  773651
services.user.SeedService.maxUniqueEngines :  20

