// -------------------------------------------------------
// I am completely mystified by why GNU CC forbids this,
// while other compilers require it!
//--------------------------------------------------------

//DYNLOAD inlined everything to avoid multiply def'd symbols 

template <class Measureable>
inline
void Measurement<Measureable>::applyYourselfTo(Fitter<Measureable> *theFitter) const {
  theFitter->apply(this);
}


// Nothing needed
template <class Measureable>
inline
Measurement<Measureable>::Measurement()
{
}

// Nothing needed
template <class Measureable>
inline
Measurement<Measureable>::~Measurement()
{
}



template <class Measureable>
inline
double Measurement<Measureable>::getDeltaChiSquared(const Measureable &measureable) const
{
  HepVector delta=getDisplacementFrom(measureable);
  return (delta.T()*getErrorMatrix(measureable)*delta)[0];
}

template <class Measureable>
inline
double Measurement<Measureable>::getDeltaChiSquared(const Fit<Measureable> &fit) const
{
  HepVector delta=getDisplacementFrom(fit.getMeasureable());
  HepMatrix derivatives=getDerivativeMatrix(fit.getMeasureable());
  return (delta.T()*(getErrorMatrix(fit.getMeasureable())+derivatives.T()*fit.getErrorMatrix()*derivatives)*delta)[0];
}





