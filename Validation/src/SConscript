#!/usr/bin/env python
#
#

import os, re
Import('env')

Import('mu2e_helper')

helper=mu2e_helper()

rootlibs = env['ROOTLIBS']

#mainlib = helper.make_mainlib ( [ rootlibs ] )

#                                 'mu2e_Validation_root_map',
mainlib = helper.make_mainlib ( [ 'mu2e_Validation_root',
                                  'mu2e_TrackCaloMatching',
                                  'mu2e_Mu2eUtilities',
                                  'mu2e_ConditionsService',
                                  'mu2e_GeometryService',
                                  'mu2e_MCDataProducts',
                                  'mu2e_RecoDataProducts',
                                  'mu2e_GeneralUtilities',
                                  'art_Framework_Core',
                                  'art_Framework_Principal',
                                  'art_Framework_Services_Registry',
                                  'art_Framework_Services_Optional_TFileService_service',
                                  'art_Framework_Services_Optional',
                                  'art_Persistency_Provenance',
                                  'canvas_Persistency_Provenance',
                                  'art_Persistency_Common',
                                  'canvas_Persistency_Common',
                                  'art_Utilities',
                                  'canvas_Utilities',
                                  'cetlib',
                                  rootlibs,
                                  'CLHEP'
                                  ] )


#helper.make_plugins( [ mainlib, rootlibs] )

#                       'mu2e_Validation_root_map',
helper.make_plugins( [ mainlib,'mu2e_Validation_root',
                       'mu2e_TrackCaloMatching',
                       'mu2e_GeometryService',
                       'mu2e_ConditionsService',
                       'mu2e_Mu2eUtilities',
                       'mu2e_GeneralUtilities',
                       'mu2e_MCDataProducts',
                       'mu2e_RecoDataProducts',
                       'mu2e_DataProducts',
                       'art_Framework_Core',
                       'art_Framework_Principal',
                       'art_Framework_Services_Registry',
                       'art_Framework_Services_Optional_TFileService_service',
                       'art_Framework_Services_Optional',
                       'art_Persistency_Provenance',
                       'canvas_Persistency_Provenance',
                       'art_Persistency_Common',
                       'canvas_Persistency_Common',
                       'art_Utilities',
                       'canvas_Utilities',
                       'fhiclcpp',
                       'cetlib',
                       rootlibs,
                       'CLHEP',
                       'boost_system', 
                       'boost_filesystem' ] )


helper.make_dict_and_map( [ mainlib,
                          ] )


base      = os.environ['MU2E_BASE_RELEASE']
bindir    = env['BINDIR']

env.Program(
  target = bindir+'valCompare',
  source = [ 'valCompare.cpp' ],
  LIBS   = [ 'mu2e_Validation_root', 
                       rootlibs ]
  )




# this tells emacs to view this file in python mode.
# Local Variables:
# mode:python
# End:
