#
# Generate full phase space of DIO, one per event.
#
# $Id: dioBG.fcl,v 1.1 2012/07/15 16:01:19 kutschke Exp $
# $Author: kutschke $
# $Date: 2012/07/15 16:01:19 $

#include "fcl/minimalMessageService.fcl"
#include "fcl/standardProducers.fcl"
#include "fcl/standardServices.fcl"

# Give this job a name.
process_name : DioBG

# Start form an empty source
source : {
  module_type : EmptyEvent
  maxEvents : 10000
}

services : {

  message               : @local::default_message
  TFileService          : { fileName : "dioBG.root" }
  RandomNumberGenerator : { }

  GeometryService        : { inputFile      : "Mu2eG4/geom/geom_common.txt"            }
  ConditionsService      : { conditionsfile : "Mu2eG4/test/conditions_01.txt"      }
  GlobalConstantsService : { inputFile      : "Mu2eG4/test/globalConstants_01.txt" }
  SeedService            : @local::automaticSeeds
  G4Helper               : { }

}

physics : {
  producers :  {

    generate             : @local::generate
    g4run                : @local::g4run
    makeSD               : @local::makeSD
    makeSH               : @local::makeSHfromSD
    @table::CaloDigiMC.producers
    @table::CaloReco.producers
    randomsaver          : @local::randomsaver

  }

  filters : {

    removeEmpty:{
      module_type          : MinimumHits
      mode                 : "trackerOrCalorimeter"
      generatorModuleLabel : "generate"
      g4ModuleLabel        : "g4run"
      strawHitMakerLabel   : "makeSH"
      crystalHitMakerLabel : "CaloCrystalHitFromHit"
    }

  }

  analyzers: {

    checkhits: {
      module_type            : ReadBack
      generatorModuleLabel   : generate
      g4ModuleLabel          : g4run
      caloReadoutModuleLabel : CaloShowerStepROFromShowerStep
      minimumEnergy          : 0.000
      maxFullPrint           : 0
    }

    readStrawHits: {
      module_type      : ReadStrawHit
      recoModuleLabel : makeSH
      simModuleLabel : makeSD
      diagLevel        : 0
      maxFullPrint     : 0
    }


  }

  p1 : [generate , g4run , makeSD, makeSH, @sequence::CaloDigiMC.DigiSim,@sequence::CaloReco.Reco,
        randomsaver, removeEmpty ]
  e1 : [checkhits, readStrawHits, outfile]

  trigger_paths  : [p1]
  end_paths      : [e1]

}

outputs: {
  outfile :  {
    module_type   :   RootOutput
    fileName      :   "dioBG_data.root"
    SelectEvents : [ p1 ]
  }

}

physics.producers.generate.inputfile : "EventGenerator/defaultConfigs/decayInOrbitGun.txt"
