#
# Merge input files from a series of grid jobs that make ejected neutron  mixing inputs.
# Also write a second output file that selects only events that contain
# at least one StepPointMC in the tracker.
#
# For both output files, keep only the output of the generator and g4;
# drop any data products made by any of makeSH, CaloReadoutHitsMaker
# or CaloCrystalHitsMaker.
#
# $Id: neutronMerge.fcl,v 1.1 2012/07/25 22:22:40 kutschke Exp $
# $Author: kutschke $
# $Date: 2012/07/25 22:22:40 $

#include "minimalMessageService.fcl"
#include "standardProducers.fcl"
#include "standardServices.fcl"

#include "neutronFiles.fcl"

process_name : NeutronMerge

source : {
  module_type   : RootInput
  fileNames     : @local::inputFiles
  maxEvents     : -1
}

services : {

  message      : @local::default_message
  TFileService : { fileName : "neutronMerge.root" }

  GeometryService        : { inputFile      : "Mu2eG4/test/geom_01.txt"            }
  ConditionsService      : { conditionsfile : "Mu2eG4/test/conditions_01.txt"      }
  GlobalConstantsService : { inputFile      : "Mu2eG4/test/globalConstants_01.txt" }

}

physics : {

 filters : {

    hasTrackerSteps : {
      module_type          : MinimumHits
      mode                 : "trackerOnly"
      generatorModuleLabel : "generate"
      g4ModuleLabel        : "g4run"
      strawHitMakerLabel   : "makeSH"
      crystalHitMakerLabel : "CaloCrystalHitsMaker"
    }

  }

  p1 : [ hasTrackerSteps   ]
  e1 : [ allOut, trackerOut]

  trigger_paths  : [p1]
  end_paths      : [e1]

}

outputs: {

  // Write all events
  allOut : {
    module_type    : RootOutput
    fileName       : "../neutronBG_data.root"
    outputCommands : [  "keep *_*_*_*"
                      ,"drop *_makeSH_*_*"
                      ,"drop *_CaloReadoutHitsMaker_*_*"
                      ,"drop *_CaloCrystalHitsMaker_*_*"
                     ]
  }

  // Write only events with tracker StepPointMCs
  trackerOut :  {
    module_type    : RootOutput
    fileName       : "../neutronBG_Tracker_data.root"
    SelectEvents   : { SelectEvents : [ p1 ] }
    outputCommands : [  "keep *_*_*_*"
                      ,"drop *_makeSH_*_*"
                      ,"drop *_CaloReadoutHitsMaker_*_*"
                      ,"drop *_CaloCrystalHitsMaker_*_*"
                     ]
  }

}
