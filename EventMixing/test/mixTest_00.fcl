#
# Do event mixing.
#
# $Id: mixTest_00.fcl,v 1.4 2012/03/02 17:16:22 gandr Exp $
# $Author: gandr $
# $Date: 2012/03/02 17:16:22 $

#include "minimalMessageService.fcl"
#include "standardProducers.fcl"

# Give this job a name.
process_name : MixTest01

# Start form an empty source
source :
{
  module_type : EmptyEvent
  maxEvents : 25
}

services :
{
  message : @local::default_message

  TFileService : { fileName : "mixTest_00.root" }

  RandomNumberGenerator : { }

  GeometryService : { inputFile : "Mu2eG4/geom/geom_common.txt" }

  ConditionsService : {  conditionsfile : "Mu2eG4/test/conditions_01.txt" }

  GlobalConstantsService : { inputFile : "Mu2eG4/test/globalConstants_01.txt" }

  G4Helper : { }

}

physics :
{
  producers:{
    makeSH : @local::makeSH
    summary : {
      module_type : SummarizeStatusG4
      g4ModuleLabel : ""
    }
  }

  filters: {
    mixer: {

      // Parameters for the MixFilter template
      module_type       : MixMCEvents
      fileNames           : [ "/mu2e/data/outstage/kutschke/72784/72784_0000/TTrackerBg_0000_data.root" ]
      readMode            : sequential
      seed                : [13579]

      // Parameters for the MixDetail class
      mean                :  3.5
      genModuleLabel      : generate
      g4ModuleLabel       : g4run
      stepInstanceNames   : [ "tracker", "virtualdetector", "timeVD", "stoppingtarget", "CRV", "calorimeter", "calorimeterRO" ]
      doPointTrajectories : true
    }
  }

  analyzers:{
    checkMix : { module_type : MixAnalyzer }
  }

  p1 : [ mixer, summary, makeSH ]
  e1 : [ checkMix, outfile ]

  trigger_paths  : [p1]
  end_paths      : [e1]

}

outputs:
{
  outfile :
  {
    module_type   :   RootOutput
    fileName      :   "mixTest_data_00.root"
  }

}
