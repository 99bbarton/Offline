# Configuration file for looking at the straws in the geometry
#
# $Id: GrokGeometry.fcl,v 1.3 2011/05/26 19:21:50 onoratog Exp $
# $Author: onoratog $
# $Date: 2011/05/26 19:21:50 $
#
# Written by Mark Fischler starting from 
# makeDPIStrawClusters by authors Rob Kutschke and Hans Wenzel

#include "minimalMessageService.fcl"
#include "standardProducers.fcl"

# Give this job a name.
process_name : StrawDescriptionsTest

# Read events from a file (made by Mu2eG4 example g4test_03.py)
source :
{
  module_type : RootInput
  fileNames : ["data_03.root"]
  maxEvents : 1
}

services :
{
  message : @local::default_message
  # Adjust configuration of message logger:
  # Limit of 5 per category; then exponential backoff.
  message.destinations.log.default.limit : 5
   
  TFileService :
  {
    fileName      : "grokGeometry.root"
    closeFileFast : false
  }

  RandomNumberGenerator : { }

  user :
  {
    GeometryService :
    {
      inputFile : "Mu2eG4/test/geom_01.txt"
    }

    ConditionsService :
    {
      conditionsfile : "Mu2eG4/test/conditions_01.txt"
    }

  }

}

physics :
{
  producers:
  {
    # Form StrawHits (SH).
    makeSH: @local::makeSH

    # make  the DPIStrawClusters
    makeSC:
    {
      module_type      : MakeDPIStrawCluster
      makerModuleLabel : makeSH
      diagLevel        : 0
      maxFullPrint     : 5
    }

  }

  analyzers:
  {
    # Check the StrawHits
    testSH:
    {
      module_type      : ReadStrawHit
      makerModuleLabel : makeSH
      diagLevel        : 0
      maxFullPrint     : 5
    }

    # Check the StrawClusters
    testSC:
    {
      module_type        : ReadDPIStrawCluster
      g4ModuleLabel      : g4run
      makerModuleLabel   : makeSH
      clmakerModuleLabel : makeSC
      diagLevel          : 0
      maxFullPrint       : 5
    }

  }

  p1 : [makeSH , makeSC ]
  e1 : [testSH , testSC ]


  trigger_paths  : [p1]
  end_paths      : [e1]

}

outputs:
{

# outfile :
# {
#   module_type   :   RootOutput
#   filename      :   "hits_03.root"
#   fastCloning   :   false
# }

}


