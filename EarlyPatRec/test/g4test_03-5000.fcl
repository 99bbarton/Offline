# Configuration file for G4Test03-5000
#  - Generate 5000 (not 500) events including one conversion electron plus
#    some number of background processes.
#  - Run these through G4.
#  - No event display.
#  - Form StrawHits from StepPointMC objects
#  - Write event data to an output file
#  - Save state of random numbers to the event-data output file
#
# $Id: g4test_03-5000.fcl,v 1.6 2012/03/02 17:16:22 gandr Exp $
# $Author: gandr $
# $Date: 2012/03/02 17:16:22 $
#
# Original author Rob Kutschke

#include "fcl/messageService.fcl"
#include "diagnostics.fcl"
#include "standardProducers.fcl"

# Give this job a name.
process_name : "G4Test03"

# Start form an empty source
source :
{
  module_type : EmptyEvent
  maxEvents : 5000
}


services :
{
  message : @local::mf_batch
   
  TFileService :
  {
    fileName      : "g4test_03-5000.root"
    closeFileFast : false
  }

  RandomNumberGenerator : { }

  user :
  {
    GeometryService :
    {
      inputFile : "Mu2eG4/test/geom_01.txt"
    }

    ConditionsService :
    {
      conditionsfile : "Mu2eG4/test/conditions_01.txt"
    }

    GlobalConstantsService : { inputFile : "Mu2eG4/test/globalConstants_01.txt" }

    G4Helper : { }

  }

}

physics :
{
  producers:
  {

    # Save state of random numbers to the event.
    randomsaver:
    {
      module_type   : RandomNumberSaver
    }

    # Generate the event
    generate: @local::generate

    # Run G4 and add hits to the event
    g4run : @local::g4run

    # Form StrawHits (SH).
    makeSH: @local::makeSH

    # Form CaloReadoutHits (APD hits)
    CaloReadoutHitsMaker: @local::MakeCaloReadoutHits
# This will FAIL ----  
#   CaloReadoutHitsMaker.maxFullPrint: 201

    # Form CaloCrystalHits (reconstruct crystals from APDs)
    CaloCrystalHitsMaker: @local::CaloCrystalHitsMaker
    # CaloCrystalHitsMaker.maxFullPrint: 201

    
 }
# This will WORK ----  
  producers.CaloReadoutHitsMaker.maxFullPrint: 201
  
  analyzers:
  {
    # Look at the hits from G4.
    checkhits:
    {
      module_type          : ReadBack
      generatorModuleLabel : generate
      g4ModuleLabel        : g4run
      minimumEnergy        : 0.001
      diagLevel            : @local::diagLevel
      maxFullPrint         : 201
    }

    # Check the StrawClusters
    testSC:
    {
      module_type        : ReadDPIStrawCluster
      g4ModuleLabel      : g4run
      makerModuleLabel   : makeSH
      clmakerModuleLabel : makeSC
      diagLevel          : @local::diagLevel
      maxFullPrint       : @local::maxFullPrint
    }

  }

  # Note - randomsaver belongs on this list (preferably first but anywhere works
  #        but random saver is currently broken
  p1 : [ generate
       , g4run
       , makeSH 
       , CaloReadoutHitsMaker
       , CaloCrystalHitsMaker ]
  e1 : [checkhits , outfile ]


  trigger_paths  : [p1]
  end_paths      : [e1]

}

#outputs:
#{
# Define the output file.
#  outfile : 
#  {
#    module_type    : RootOutput
#    filename       : "/grid/data/mf/data_03-5000.root"
#    filename       : "data_03.root"
#    outputCommands : [ 'keep *_*_*_*'
#                     , 'drop mu2ePointTrajectoryMapVector_*_*_*'
		   # , 'drop mu2eSimParticles_*_*_*'
		   # Uncomment the above line to reduce file size.
#                     ]  
#  }

outputs:
{

  outfile :
  {
    module_type   :   RootOutput
    fileName      :   "/grid/data/mf/data_03-5000.root"
#    outputCommands:   [ "keep *_*_*_*",
#                        "drop mu2ePointTrajectoryMapVector"
#                       "drop mu2eSimParticles_*_*_*"        # Uncomment this line to reduce file size.
#                      ]
  }

}


