# Configuration file for G4Test03
#
#  - Generate 200 events including one conversion electron plus
#    some number of background processes.
#  - Run these through G4.
#  - No event display.
#  - Form StrawHits from StepPointMC objects
#  - Write event data to an output file
#  - Save state of random numbers to the event-data output file
#
# $Id: g4test_03.fcl,v 1.1 2014/08/29 16:16:17 knoepfel Exp $
# $Author: knoepfel $
# $Date: 2014/08/29 16:16:17 $

#include "minimalMessageService.fcl"
#include "standardProducers.fcl"
#include "standardServices.fcl"

# Give this job a name.
process_name : G4Test03

# Start form an empty source
source : {
  module_type : EmptyEvent
  maxEvents : 200
}

services : {

  message               : @local::default_message
  TFileService          : { fileName : "g4test_03.root" }
  RandomNumberGenerator : { }

  user : {
    GeometryService        : { inputFile      : "Mu2eG4/test/geom_01.txt"            }
    ConditionsService      : { conditionsfile : "Mu2eG4/test/conditions_01.txt"      }
    GlobalConstantsService : { inputFile      : "Mu2eG4/test/globalConstants_01.txt" }
    G4Helper               : { }
    SeedService            : @local::automaticSeeds
  }

}

physics : {

  producers: {

    # Generate the event
    generate: @local::generate

    # Run G4 and add its output to the event.
    g4run : @local::g4run

    protonTimeMap        : { module_type : GenerateProtonTimes }
    muonTimeMap          : { module_type : GenerateMuonLife }

    # Form StrawHits (SH).
    makeSH : @local::makeSH

    # Form CaloHits (APD hits)
    CaloReadoutHitsMaker : @local::MakeCaloReadoutHits

    # Form CaloCrystalHits (reconstruct crystals from APDs)
    CaloCrystalHitsMaker : @local::CaloCrystalHitsMaker

    # Save state of the random number engines.
    randomsaver : @local::randomsaver

  }

  analyzers: {

    checkhits: {
      module_type            : ReadBack
      generatorModuleLabel   : generate
      g4ModuleLabel          : g4run
      caloReadoutModuleLabel : CaloReadoutHitsMaker
      diagLevel              : 0
      minimumEnergy          : 0.000
      maxFullPrint           : 201
    }

    readStrawHits: {
      module_type      : ReadStrawHit
      makerModuleLabel : makeSH
      diagLevel        : 3
      maxFullPrint     : 100
    }

  }

  p1 : [generate, g4run, protonTimeMap, muonTimeMap, makeSH, CaloReadoutHitsMaker, CaloCrystalHitsMaker, randomsaver ]
  e1 : [checkhits, readStrawHits, outfile]

  trigger_paths  : [p1]
  end_paths      : [e1]

}

outputs: {

  outfile : {
    module_type : RootOutput
    fileName    : "data_03.root"
  }

}

// Initialze seeding of random engines: do not put these lines in base .fcl files for grid jobs.
services.user.SeedService.baseSeed         :  0
services.user.SeedService.maxUniqueEngines :  20

# physics.producers.g4run.SDConfig.enableAllSDs : true
physics.producers.g4run.SDConfig.enableSD     : [tracker, calorimeter, calorimeterRO, CRV, virtualdetector, stoppingtarget ]

// Enable diagnsotic printout for pedagogical purposes.
physics.producers.makeSH.diagLevel : 0
physics.producers.makeSH.maxFullPrint : 5
physics.producers.CaloReadoutHitsMaker.diagLevel : 0
physics.producers.CaloReadoutHitsMaker.maxFullPrint : 201
physics.producers.CaloCrystalHitsMaker.diagLevel : 0
physics.producers.CaloCrystalHitsMaker.maxFullPrint : 201
