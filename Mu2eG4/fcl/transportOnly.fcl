# Variant of g4test_03 but with transport only.
#

#include "minimalMessageService.fcl"
#include "standardProducers.fcl"
#include "standardServices.fcl"

# Give this job a name.
process_name : transportOnly

# Start form an empty source
source : {
  module_type : EmptyEvent
  maxEvents : 1000
}

services : {

  message               : @local::default_message
  TFileService          : { fileName : "transportOnly.root" }
  RandomNumberGenerator : { }

  GeometryService        : { inputFile      : "Mu2eG4/test/geom_01.txt"            }
  ConditionsService      : { conditionsfile : "Mu2eG4/test/conditions_01.txt"      }
  GlobalConstantsService : { inputFile      : "Mu2eG4/test/globalConstants_01.txt" }
  BTrkHelper             : @local::BTrkHelperDefault
  G4Helper               : { }
  SeedService            : @local::automaticSeeds
}

physics : {

  producers:  {

    generate : @local::generate
    g4run :  @local::g4run

    protonTimeMap        : { module_type : GenerateProtonTimes }
    muonTimeMap          : { module_type : GenerateMuonLife }

    makeSD               : @local::makeSD
    makeSH               : @local::makeSHfromSD

    CaloReadoutHitsMaker : @local::MakeCaloReadoutHits
    CaloCrystalHitsMaker : @local::CaloCrystalHitsMaker
    randomsaver          : @local::randomsaver

  }


  analyzers: {

    checkhits: {
      module_type            : ReadBack
      generatorModuleLabel   : generate
      g4ModuleLabel          : g4run
      caloReadoutModuleLabel : CaloReadoutHitsMaker
      diagLevel              : 0
      minimumEnergy          : 0.000
      maxFullPrint           : 201
    }

    # Look at the hits from TTrackerPlaneSupport Sensitive Detectors
    checksdd: {
      module_type          : ReadTTrackerDSDetectors
      diagLevel            : 0
      hitMakerModuleLabel  : g4run
      sddStepPoints        : ttrackerDS
      maxFullPrint         : 201
    }
    # Look at the hits from virtualdetectors
    readvd: {
      module_type      : ReadVirtualDetector
      vdStepPoints     : virtualdetector
      savePDG          : [13 , -211]
      maxPrint         : 200
    }

  }

  p1 : [generate , g4run , protonTimeMap, muonTimeMap, makeSD, makeSH, CaloReadoutHitsMaker, CaloCrystalHitsMaker, randomsaver]
  e1 : [checkhits, checksdd, readvd, outfile]

  trigger_paths  : [p1]
  end_paths      : [e1]

}

outputs:  {

  outfile : {
    module_type   :   RootOutput
    fileName      :   "data_06.root"
  }

}

// Disable all physics except transport.
physics.producers.g4run.physics.physicsListName: "Minimal"
physics.producers.g4run.SDConfig.enableSD     : [tracker, calorimeter, calorimeterRO, CRV, virtualdetector, stoppingtarget ]

// Initialze seeding of random engines: do not put these lines in base .fcl files for grid jobs.
services.SeedService.baseSeed         :  0
services.SeedService.maxUniqueEngines :  20

physics.producers.generate.inputfile   : "Mu2eG4/test/genconfig_tonly.txt"
physics.producers.makeSH.diagLevel     : 0
physics.producers.makeSH.maxFullPrint  : 5
physics.producers.makeSH.minimumEnergy : 0

physics.producers.CaloReadoutHitsMaker.diagLevel    :   0
physics.producers.CaloReadoutHitsMaker.maxFullPrint : 201
physics.producers.CaloCrystalHitsMaker.diagLevel    :   0
physics.producers.CaloCrystalHitsMaker.maxFullPrint : 201
