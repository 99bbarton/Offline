#
# Generate a single conversion electron, run it through G4
# and draw a picture in the (x,y) view.  Do only one event.
#
# $Id: g4test_01.fcl,v 1.1 2014/08/29 16:16:17 knoepfel Exp $
# $Author: knoepfel $
# $Date: 2014/08/29 16:16:17 $

#include "minimalMessageService.fcl"
#include "standardProducers.fcl"
#include "standardServices.fcl"

# Give this job a name.
process_name : G4Test01

# Start form an empty source
source : {
  module_type : EmptyEvent
  maxEvents : 1
}

services : {
  message               : @local::default_message
  TFileService          : { fileName : "g4test_01.root" }
  RandomNumberGenerator : {}

  user : {
    GeometryService   : { inputFile      : "Mu2eG4/test/geom_01_LowDetailGraphics.txt" }
    ConditionsService : { conditionsfile : "Mu2eG4/test/conditions_01.txt"  }
    GlobalConstantsService : { inputFile : "Mu2eG4/test/globalConstants_01.txt" }
    G4Helper          : { }
    SeedService       : @local::automaticSeeds
  }

}

physics : {

  producers: {

    # Generate Event
    generate:  {
      module_type   : EventGenerator
      inputfile     : "Mu2eG4/test/genconfig_01.txt"
    }

    # Run G4 and add its output to the event.
    g4run : @local::g4run

  }

  p1 : [ generate, g4run ]

  trigger_paths  : [p1]

}

// Initialze seeding of random engines: do not put these lines in base .fcl files for grid jobs.
services.user.SeedService.baseSeed         :  0
services.user.SeedService.maxUniqueEngines :  20

// Enable G4 graphics with the xy view.
physics.producers.g4run.visMacro : "Mu2eG4/test/visxz.mac"
