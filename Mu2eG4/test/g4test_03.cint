//
// Root script to make some plots directly from the ntuple made in 
// the ReadBack plugin.
// 
// $Id: g4test_03.cint,v 1.2 2010/06/28 22:59:51 kutschke Exp $
// $Author: kutschke $
// $Date: 2010/06/28 22:59:51 $
// 
// Original author Rob Kutschke
//
{

  // With this you can reinvoke the script without exiting root.
  gROOT->Reset();

  // Get rid of grey background on print out.
  gROOT->SetStyle("Plain");

  // Open the input file that contains Mu2e event data.
  TFile* file = new TFile("g4test_03.root");

  // Name of the plot file.
  TString plotfile("g4test_03.ps");

  // Get points to some of the histograms.
  TH1F* hMultiplicity;  file->GetObject("checkhits/hMultiplicity",   hMultiplicity);
  TH1F* hHitNeighbours; file->GetObject("checkhits/hHitNeighbours", hHitNeighbours);
  TH1F* hEnergyDep;     file->GetObject("checkhits/hEnergyDep",      hEnergyDep);
  TH1F* hStepLength;    file->GetObject("checkhits/hStepLength",     hStepLength);

  // Get a pointer to the ntuple.
  TNtuple* nt; file->GetObject("checkhits/ntup",nt);

  // Open window on the screen.
  TCanvas*c = new TCanvas("c", "Test", 0, 0, 900, 900 );

  // Open a postscript file (may be multi-page).
  c->Print( plotfile+"[");

  // Split the window into 4 regions.
  c->Divide(2,2);

  // Draw a histogram of the 
  c->cd(1); hMultiplicity->Draw("H9");
  c->cd(2); hHitNeighbours->Draw("H9");
  c->cd(3); hEnergyDep->Draw("H9");
  c->cd(4); hStepLength->Draw("H9");

  // Flush page to and issue continuation prompt.
  c->Update();
  cerr << "Double click in the Canvas to continue:" ;

  // Print this page to the postscript file.
  c->Print(plotfile);

  // Wait for response before continuing.
  c->WaitPrimitive();

  // Get ready for page 2.
  c->cd(0);
  c->Clear();

  // Make a y vs x scatter plot of the hit positions.
  nt->Draw( "hx:hy","","");

  // Flush page to and issue continuation prompt.
  c->Update();
  cerr << "Double click in the Canvas to continue:" ;

  // Print this page to the postscript file.
  c->Print(plotfile);

  // Wait for response before continuing.
  c->WaitPrimitive();

  // Get ready for page 2.
  c->cd(0);
  c->Clear();

  // Make a y vs x scatter plot of the hit positions.
  nt->Draw( "edep:step","step<10&&edep<25","");

  // Flush page to and issue continuation prompt.
  c->Update();
  cerr << "Double click in the Canvas to continue:" ;

  // Print this page to the postscript file.
  c->Print(plotfile);

  // Make  second copy of this page as a .png
  c->Print("g4test_03.png");

  // Wait for response before continuing.
  c->WaitPrimitive();

  // Close the plotfile.
  c->Print(plotfile+"]");

 }
