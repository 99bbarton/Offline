#
#  - Generate events including one conversion electron plus
#    some number of background processes.
#  - Run these through G4.
#  - No event display.
#  - Form Hits from StepPointMC objects
#  - reconstruct electron tracks
#
# $Id: g4validate_01.fcl,v 1.1 2013/02/11 14:48:31 genser Exp $
# $Author: genser $
# $Date: 2013/02/11 14:48:31 $

#include "minimalMessageService.fcl"
#include "standardProducers.fcl"
#include "standardServices.fcl"

# Give this job a name.
process_name : G4Validate03

# Start form an empty source
source : {
  module_type : EmptyEvent
  maxEvents : 20000
}

services : {

  message               : @local::default_message
  TFileService          : { fileName : "g4validate_03.root" }
  RandomNumberGenerator : { }

  user : {
    GeometryService        : { inputFile      : "Mu2eG4/test/geom_01.txt"            }
    ConditionsService      : { conditionsfile : "Mu2eG4/test/conditions_01.txt"      }
    GlobalConstantsService : { inputFile      : "Mu2eG4/test/globalConstants_01.txt" }
    G4Helper               : { }
    SeedService            : @local::automaticSeeds
  }

}

physics : {

  producers: {

    # Generate the event
    generate: @local::generate

    # Run G4 and add its output to the event.
    g4run : @local::g4run

    # Form StrawHits (SH).
    makeSH : @local::makeSH

    # Form CaloHits (APD hits)
    CaloReadoutHitsMaker : @local::CaloReadoutHitsMaker

    # Form CaloCrystalHits (reconstruct crystals from APDs)
    CaloCrystalHitsMaker : @local::CaloCrystalHitsMaker

    # Save state of the random number engines.
    randomsaver : @local::randomsaver

    # Tracking for some different particle types
    TPRDownstreameMinus : @local::TrkPatRecDownstreameMinus

   }

  analyzers: {

    checkhits: {
      module_type            : ReadBack
      generatorModuleLabel   : generate
      g4ModuleLabel          : g4run
      caloReadoutModuleLabel : CaloReadoutHitsMaker
      diagLevel              : 0
      minimumEnergy          : 0.000
      maxFullPrint           : 5
    }

    readStrawHits: {
      module_type      : ReadStrawHit
      makerModuleLabel : makeSH
      diagLevel        : 0
      maxFullPrint     : 5
    }

    RKFDownstreameMinus :
    {
      module_type    : ReadKalFits
      fitterModuleLabel : TPRDownstreameMinus
      fitparticle : 11
      fitdirection : 0
    }


  }

  p1 : [generate, g4run, makeSH, CaloReadoutHitsMaker, CaloCrystalHitsMaker, TPRDownstreameMinus]
  e1 : [checkhits, readStrawHits, RKFDownstreameMinus]

  trigger_paths  : [p1]
  end_paths      : [e1]

}

physics.producers.generate.inputfile  : "Mu2eG4/test/genconfig_DownstreameMinus.txt"
# needed to fill the diagnostic histograms
physics.analyzers.RKFDownstreameMinus.KalFitMC.diaglLevel : 2

// Initialze seeding of random engines: do not put these lines in base .fcl files for grid jobs.
services.user.SeedService.baseSeed         :  0
services.user.SeedService.maxUniqueEngines :  20

