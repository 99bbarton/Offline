// Proton beam dump parameters. 
// See mu2e docdb #948 and #1944
// 
// Andrei Gaponenko, 2011

bool           hasProtonBeamDump = true;

string         protonBeamDump.material.core  = "G4_Fe";
string         protonBeamDump.material.shielding = "ShieldingConcrete";
string         protonBeamDump.material.air = "G4_AIR";

bool           protonBeamDump.dirtVisible = false;
bool           protonBeamDump.dirtSolid   = false;
bool           protonBeamDump.logicalEnclosureVisible = true;
bool           protonBeamDump.logicalEnclosureSolid   = false;
bool           protonBeamDump.coreVisible = true;
bool           protonBeamDump.coreSolid   = true;
bool           protonBeamDump.mouthVisible = true;
bool           protonBeamDump.mouthSolid   = false;
bool           protonBeamDump.neutronCaveVisible = true;
bool           protonBeamDump.neutronCaveSolid   = false;
bool           protonBeamDump.magnetPitVisible = true;
bool           protonBeamDump.magnetPitSolid   = false;

// Sizes below are given in mm in this order:
//  {horizontal transverse to beam, vertical, horizontal along beam}
vector<double> protonBeamDump.coreHalfSize  = { 750., 750., 1000.};
// Beam entrance.
vector<double> protonBeamDump.mouthHalfSize = {750., 750., 500.};
// Neutron cave
vector<double> protonBeamDump.neutronCaveHalfSize = {1250., 1250., 500.};

// shielding around the core
double         protonBeamDump.minCoreShieldingThickness = 1000.;

// Relative position of beam dump core w.r.t. the
// production target is specified in  docdb-1944.
// Add the offsets to productionTarget.position
vector<double> protonBeamDump.coreCenterInMu2e = {667., 528., -19829.};
double         protonBeamDump.coreRotY = 13.3; // degrees

//----------------------------------------------------------------
// The extinction monitor filter channel

// the first collimator 
double         extMonFilter.collimator1.horizontalLength = 4000.;
// Upstream and downstream halfs may have different transverse sizes.
// 
// The air channel {upstream size, downstream size}
vector<double> extMonFilter.collimator1.channelWidth  = {50., 50.};
vector<double> extMonFilter.collimator1.channelHeigh  = {50., 70.};
// the alignment plug:
vector<double> extMonFilter.collimator1.alignmentPlugRadius = { 100, 177.8  };
vector<double> extMonFilter.collimator1.alignmentHoleRClearance = { 12.7, 12.7 };
double extMonFilter.collimator1.radiusTransitiondZ = 0;

// The entrance point on the face of the beam dump enclosure, 
// transverse to the beam coordinates (horiz, vertical)
// The offsets are w.r.t to the core center position
double         extMonFilter.collimator1.entranceOffsetX = 50;
double         extMonFilter.collimator1.entranceOffsetY = 1250;

// Orientation: angles in horizontal and vertical planes w.r.t dump core
double         extMonFilter.collimator1.angleH = 0.; //radians
double         extMonFilter.collimator1.angleV = 0.1655; //radians

bool extMonFilter.collimator1.alignmentHole.visible = true;
bool extMonFilter.collimator1.alignmentHole.solid = false;
bool extMonFilter.collimator1.alignmentPlug.visible = true;
bool extMonFilter.collimator1.alignmentPlug.solid = false;
bool extMonFilter.collimator1.channel.visible = true;
bool extMonFilter.collimator1.channel.solid = true;

//----------------------------------------------------------------
// The second collimator

double         extMonFilter.collimator2.horizontalLength = 3000.;
// the downstream half of the channel is wider
vector<double> extMonFilter.collimator2.channelWidth  = {50., 75.};
vector<double> extMonFilter.collimator2.channelHeigh  = {50., 75.};
// the alignment plug:
vector<double> extMonFilter.collimator2.alignmentPlugRadius = { 100, 177.8  };
vector<double> extMonFilter.collimator2.alignmentHoleRClearance = { 12.7, 12.7 };
double extMonFilter.collimator2.radiusTransitiondZ = 0;

// The entrance point on the face of the magnet room
// transverse to the beam coordinates (horiz, vertical)
double         extMonFilter.collimator2.entranceOffsetX = 50;
// Y: 750 + 1869.6 for no kick in magnet, 750 + 1518.9 for horizontal exit
double         extMonFilter.collimator2.entranceOffsetY = 2619.6;
// Orientation: angles in horizontal and vertical planes w.r.t dump core
double         extMonFilter.collimator2.angleH = 0.; //radians
double         extMonFilter.collimator2.angleV = 0.1655; // 0.05; //radians

bool extMonFilter.collimator2.alignmentHole.visible = true;
bool extMonFilter.collimator2.alignmentHole.solid = false;
bool extMonFilter.collimator2.alignmentPlug.visible = true;
bool extMonFilter.collimator2.alignmentPlug.solid = false;
bool extMonFilter.collimator2.channel.visible = true;
bool extMonFilter.collimator2.channel.solid = true;

//----------------------------------------------------------------
// The filter magnet room: (horiz tranverse, vertical, along beam)
// The vertical position of the room is such as to leave the minimal required
// shielding thickness above the dump core.
vector<double> extMonFilter.magnetPitHalfSize = {750., 750., 2100.};

// The magnet
vector<double> extMonFilter.magnet.outerHalfSize = {95., 150., 1778. }; // mm
double extMonFilter.magnet.apertureWidth  =  50.; // mm
double extMonFilter.magnet.apertureHeight = 100.; // mm
string extMonFilter.magnet.material  = "G4_Fe";
double extMonFilter.magnet.fieldStrength = 0.222; // Tesla

// The magnet is positioned so that a positive particle with 
// the nominal momentum given below, travelling at the bottom of
// collimator1 channel (at exit) parallel to the collimator1 axis,
// will enter the magnet aperture at the bottom and exit at at the 
// bottom after being deflected by the magnetic field.
double extMonFilter.nominalMomentum = 4000.; // MeV/c

// This tells emacs to view this file in c++ mode.
// Local Variables:
// mode:c++
// End:
