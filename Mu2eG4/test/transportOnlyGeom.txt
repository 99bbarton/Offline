//
// Standard geometry with physics turned off.
// We need to put the control of physics elsewhere.
//
// $Id: transportOnlyGeom.txt,v 1.16 2014/06/05 21:10:43 genser Exp $
// $Author: genser $
// $Date: 2014/06/05 21:10:43 $
//
// Original author Rob Kutschke

// Start with the standard geometry.
#include "Mu2eG4/test/geom_01.txt"

// Change the name.
string detector.name = "transportOnlyGeom";

// Disable all physics except transport.
string g4.physicsListName = "Minimal";

bool g4.forceAuxEdgeVisible = true;

// 
bool PS.visible   = false;
// 
bool PSEnclosure.visible = false;
bool PSEnclosure.vacuum.visible = false;
bool PSShield.visible = false;
bool PSExternalShielding.visible = false;

bool calorimeter.calorimeterVisible           = false;
bool calorimeter.boxVisible                   = false;
bool calorimeter.caseVisible                  = false;
bool calorimeter.pipeVisible                  = false;
bool calorimeter.crystalVisible               = false;
bool calorimeter.absorberBoxVisible           = false;

// bool coll.visible = false;
// 
bool crs.vetoVisible = false;


bool extMonFNAL.collimator1.alignmentHole.visible = false;
bool extMonFNAL.collimator1.alignmentPlug.visible = false;
bool extMonFNAL.collimator1.channel.visible = false;
bool extMonFNAL.collimator1.shielding.visible = false;

bool extMonFNAL.collimator2.alignmentHole.visible = false;
bool extMonFNAL.collimator2.alignmentPlug.visible = false;
bool extMonFNAL.collimator2.channel.visible = false;
bool extMonFNAL.collimator2.shielding.visible = false;

bool extMonFNAL.filter.magnet.aperture.visible = false;
bool extMonFNAL.filter.magnet.iron.visible = false; 
bool extMonFNAL.moduleVisible        = false;
bool extMonFNAL.readoutPlaneVisible  = false;

bool extMonFNAL.room.ceiling.visible = false;
bool extMonFNAL.room.floor.visible   = false;
bool extMonFNAL.room.visible         = false;
bool extMonFNAL.room.wall.visible    = false;
bool extMonFNAL.sensorPlaneVisible   = false;
bool extMonFNAL.spectrometer.magnet.aperture.visible = false;
bool extMonFNAL.spectrometer.magnet.iron.visible = false;
bool extMonFNAL.stackMotherVisible   = false;

bool extmon_uci.envelopeVisible      = false;
bool extmon_uci.platformVisible      = false;
bool extmon_uci.abs1Visible          = false;
bool extmon_uci.colVisible           = false;
bool extmon_uci.magVisible           = false;
bool extmon_uci.tofVisible           = false;
bool extmon_uci.shdVisible           = false;
bool extmon_uci.nshVisible           = false;
bool extmon_uci.tableVisible         = false;
bool extmon_uci.shdHoleVisible       = false;
bool extmon_uci.shdChannelVisible    = false;
bool extmon_uci.sideShieldVisible    = false;
bool extmon_uci.killerVisible        = false;

// 
// bool   crs.vetoVisible    = true;
// 


bool hall.ceilingVisible          = false;
bool hall.floorVisible            = false;
bool hall.formalBoxVisible        = false;
// bool hall.wallsVisible            = false;

// 
// bool mbs.visible = false;
// 
// 

bool PSEnclosure.vacuum.visible = false;
bool PSEnclosure.visible = false;
bool extMonFilter.collimator1.alignmentHole.visible = false;
bool extMonFilter.collimator1.alignmentPlug.visible = false;
bool extMonFilter.collimator1.channel.visible = false;
bool extMonFilter.collimator2.alignmentHole.visible = false;
bool extMonFilter.collimator2.alignmentPlug.visible = false;
bool extMonFilter.collimator2.channel.visible = false;
bool extMonFilter.magnet.aperture.visible = false;
bool extMonFilter.magnet.iron.visible = false;
bool protonBeamDump.coreVisible = false;
bool protonBeamDump.dirtVisible = false;
bool protonBeamDump.logicalEnclosureVisible = false;
bool protonBeamDump.magnetPitVisible = false;
bool protonBeamDump.mouthVisible = false;
bool protonBeamDump.neutronCaveVisible = false;
bool protonBeamDump.shieldingVisible = false;
bool protonabsorber.visible     = false;

bool piondeg.visible = false;

bool PS.visible                 = false;
bool targetPS.visible           = false;
bool supWheel_trgtPS.visible    = false;
bool clamp_supWheel.visible     = false;
bool PSExternalShielding.visible = false;
bool PSShield.visible = false;

bool ds.visible          = false;
bool dsCoil.visible      = false;
bool dsSupport.visible   = false;
bool dsThShield.visible  = false;
// bool dsVacuum.visible    = false;
// bool dsShielding.visible = false;


bool ts.cryo.visible       = false;
bool ts.polyliner.visible  = false;
bool pbar.visible          = false;
bool ts.coll.visible       = false;
bool muondegrader.visible  = false;
bool ts.coils.visible      = false;
//

bool ttracker.deviceEnvelopeVisible = false;
bool ttracker.envelopeVisible       = false;
bool ttracker.panelEnvelopeVisible = false;
bool ttracker.strawVisible          = false;
bool ttracker.supportVisible        = false;

// Debug control for TTracker; uncomment to make only a selected panel.
// it is not about drawing, but about the construction itself
// int    ttracker.devDraw  =   -1;
// int    ttracker.secDraw  =   -1;

int    ttracker.verbosityLevel     =    0;

bool vd.visible = false;

bool world.boxVisible = false;
bool world.dirt.visible = false;

//bool g4.doSurfaceCheck = true;

//
// This tells emacs to view this file in c++ mode.
// Local Variables:
// mode:c++
// End:
