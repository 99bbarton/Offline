//
// Standard geometry with physics turned off.
// We need to put the control of physics elsewhere.
//
// $Id: transportOnlyGeom.txt,v 1.15 2013/12/16 18:30:18 genser Exp $
// $Author: genser $
// $Date: 2013/12/16 18:30:18 $
//
// Original author Rob Kutschke

// Start with the standard geometry.
#include "Mu2eG4/test/geom_01.txt"

// Change the name.
string detector.name = "transportOnlyGeom";

// Disable all physics except transport.
string g4.physicsListName = "Minimal";

bool g4.forceAuxEdgeVisible = true;

// 
// bool PS.visible   = false;
// 
bool PSEnclosure.visible = false;
bool PSEnclosure.vacuum.visible = false;
bool PSShield.visible = false;
bool PSExternalShielding.visible = false;

// 
// bool calorimeter.calorimeterVisible            = false;
// bool calorimeter.vaneBoxVisible                = false;
// bool calorimeter.vaneCaseVisible               = false;
// bool calorimeter.crystalVisible                = false;
// bool calorimeter.absorberBoxVisible            = false;
// 
// bool coll.visible = false;
// 
bool crs.vetoVisible = false;

bool  ExtNeutShieldCavexRight.visible = false;
bool  ExtNeutShieldCavexRightb.visible = false;
bool  ExtNeutShieldLCeiling.visible = false;
bool  ExtNeutShieldUpstreamBottom.visible = false;
bool  ExtNeutShieldCendBoxes.holeVisible = false;
bool  ExtNeutShieldCendBoxes.visible = false;
bool  ExtNeutShieldCavexLeft.visible = false;
bool  ExtNeutShieldUpstreamTop.visible = false;
bool  ExtNeutShieldUpstream1a.visible = false;
bool  ExtNeutShieldUpstream2.visible = false;
bool  ExtNeutShieldCryoBoxes.visible = false;
bool  ExtNeutShieldUpstream1b.visible = false;
bool  ExtNeutShieldLAbove.visible = false;
bool  ExtNeutShieldCavexRoof.visible = false;


// bool extMonFNAL.collimator1.alignmentHole.visible = false;
// bool extMonFNAL.collimator1.alignmentPlug.visible = false;
// bool extMonFNAL.collimator1.channel.visible = false;
bool extMonFNAL.collimator1.shielding.visible = false;
// 
// bool extMonFNAL.collimator2.alignmentHole.visible = false;
// bool extMonFNAL.collimator2.alignmentPlug.visible = false;
// bool extMonFNAL.collimator2.channel.visible = false;
bool extMonFNAL.collimator2.shielding.visible = false;
// 
// bool extMonFNAL.filter.magnet.aperture.visible = false;
// bool extMonFNAL.filter.magnet.iron.visible = false; 
bool extMonFNAL.moduleVisible        = false;
bool extMonFNAL.readoutPlaneVisible  = false;

bool extMonFNAL.room.ceiling.visible = false;
bool extMonFNAL.room.floor.visible   = false;
bool extMonFNAL.room.visible         = false;
bool extMonFNAL.room.wall.visible    = false;
bool extMonFNAL.sensorPlaneVisible   = false;
// bool extMonFNAL.spectrometer.magnet.aperture.visible = false;
// bool extMonFNAL.spectrometer.magnet.iron.visible = false;
bool extMonFNAL.stackMotherVisible   = false;

bool extmon_uci.envelopeVisible      = false;
bool extmon_uci.platformVisible      = false;
bool extmon_uci.abs1Visible          = false;
bool extmon_uci.colVisible           = false;
bool extmon_uci.magVisible           = false;
bool extmon_uci.tofVisible           = false;
bool extmon_uci.shdVisible           = false;
bool extmon_uci.nshVisible           = false;
bool extmon_uci.tableVisible         = false;
bool extmon_uci.shdHoleVisible       = false;
bool extmon_uci.shdChannelVisible    = false;
bool extmon_uci.sideShieldVisible    = false;
bool extmon_uci.killerVisible        = false;

// 
bool fluxcrv.visible = false;
// 


bool   hall.ceilingVisible          = false;
bool   hall.floorVisible            = false;
bool   hall.formalBoxVisible        = false;
bool   hall.wallsVisible            = false;

// 
// bool mbs.visible = false;
// 
bool intneutronabs.visible      = false;
bool extneutronabs.visible      = false;
// 

bool   protonBeamDump.dirtVisible = false;
bool   protonBeamDump.coreVisible = false;
bool   protonBeamDump.shieldingVisible = false;
bool   protonBeamDump.mouthVisible = false;
bool   protonBeamDump.neutronCaveVisible = false;

bool protonabsorber.visible = false;

// 
// bool stoppingTarget.visible   = false;
// bool target.visible           = false;
// bool targetPS.visible         = false;
// 

// bool ds.visible          = false;
bool dsCoil.visible      = false;
bool dsSupport.visible   = false;
bool dsThShield.visible  = false;
bool dsVacuum.visible    = false;
bool dsShielding.visible = false;

// 
// bool ts.cryo.visible         = false;
// bool pbar.visible            = false;
// bool ts.coll.visible         = false;
bool muondegrader.visible    = false;
// bool ts.coils.visible        = false;
// 
bool ttracker.deviceEnvelopeVisible = false;
bool ttracker.envelopeVisible       = false;
// bool ttracker.sectorEnvelopeVisible = false;
bool ttracker.strawVisible          = false;
bool ttracker.supportVisible        = false;

// Debug control for TTracker; uncomment to make only a selected sector.
// it is not about drawing, but about the construction itself
int    ttracker.devDraw  =   -1;
int    ttracker.secDraw  =   -1;

int    ttracker.verbosityLevel     =    0;

bool vd.visible = false;

bool world.boxVisible = false;
bool world.dirt.visible = false;

//bool g4.doSurfaceCheck = true;

//
// This tells emacs to view this file in c++ mode.
// Local Variables:
// mode:c++
// End:
