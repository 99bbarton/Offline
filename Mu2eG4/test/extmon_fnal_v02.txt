// Extinction monitor parameters
//
// Andrei Gaponenko, 2011

bool           hasExtMonFNAL = true;

//----------------------------------------------------------------
// ExtMonFNAL detector and magnet room inside outline.  The shielding
// between the two rooms (collimator2.shielding) is defined separately.
// The magnet room is adjacent to beam dump "front" shielding, there
// is no extra wall on that side.  If we look at the plan view
// oriented so that the dump X axis points to the left and dump Z
// axis points up, the points are defined in the clockwise order
// starting from the top (touching the dump shielding) right corner.
// One coordinate is dump X, the other is dump Z shifted by
// the dump Z of the shielding surface we touch.

// This version follows the civil drawings for the outline and some sizes,
// but assumes L(magnet room)=4200, coll2 shielding = 2000, L(extmon room)=3000
// to position the stair hall and ventilation shaft
//
// The length of the stair hall is 1612 + 1219 + 1613 = 4444 mm
// Position it symmetrically about the center of coll2 shieling at Zdump=-5200:  -7422 and -2978


// // From the drawing:
// vector<double> extMonFNAL.roomInsideX = { -1750, -1750, -3731, -3731, -1750, -1750, +2822, +2822, +3584, +3584, +2822, +2822 };
// vector<double> extMonFNAL.roomInsideZ = {     0, -2928, -2928, -7422, -7422, -9200, -9200, -4200, -4200,  -796,  -796,     0};
//
// The above conflicts with ExtMonUCI location.  The easiest solution is to adjust the corner near the shaft
// to avoid the overlap.
vector<double> extMonFNAL.roomInsideX = { -1750, -1750, -3731, -3731, -1750, -1750, +2822, +2822, +3584, +3584, +1780, +1780 };
vector<double> extMonFNAL.roomInsideZ = {     0, -2928, -2928, -7422, -7422, -9200, -9200, -4200, -4200, -1700, -1700,     0 };

// The top of the room floor is assumed to be at the same level as the
// top of ProtonBeamDump "back" shielding,
// i.e. minCoreShieldingThickness above the top surface dump core.
double extMonFNAL.room.insideFullHeight = 2743;

double extMonFNAL.room.wall.thickness = 300;
double extMonFNAL.room.floor.thickness = 300;
double extMonFNAL.room.ceiling.thickness = 300;

// Amount of dirt above ExtMonFNAL room.  From drawing S-9:  6'-0'' minus ceiling thickness
double extMonFNAL.dirtOverhead.thickness = 1530;

// Guaranteed horizontal extension along x and z of the dirt shielding
// beyond the extMonFNAL ceiling outline.
double extMonFNAL.dirtOverhead.horizontalMargin = 2000;

//----------------------------------------------------------------
// The extinction monitor filter channel

// The first collimator is embedded in frontShielding of ProtonBeamDump
// and this determines its length.
//

// Transverse size of the aperture (vector since upstream and downstream halfs
// may be different):  {upstream size, downstream size}
vector<double> extMonFNAL.collimator1.channelWidth  = {50., 50.};
vector<double> extMonFNAL.collimator1.channelHeigh  = {50., 50.};
// the alignment plug:
vector<double> extMonFNAL.collimator1.alignmentPlugRadius = { 100, 177.8  };
vector<double> extMonFNAL.collimator1.alignmentHoleRClearance = { 12.7, 12.7 };
double extMonFNAL.collimator1.radiusTransitiondZ = 0;

// The entrance point on the face of the beam dump enclosure,
// transverse to the beam coordinates (horiz, vertical).  The offsets
// are w.r.t to the core center position (== the nominal beam entrance
// point).
double         extMonFNAL.entranceOffsetX = 1000;
double         extMonFNAL.entranceOffsetY = 1250;

// Filter channel orientation: angles in horizontal and vertical
// planes w.r.t dump core. Note that angleH is the same for all filter
// elements, while angleV is different.  We specify angleV at the
// filter entrance.
double         extMonFNAL.angleH = 0.0940; //radians
double         extMonFNAL.entranceAngleV = 0.1645; //radians

bool extMonFNAL.collimator1.alignmentHole.visible = true;
bool extMonFNAL.collimator1.alignmentHole.solid = false;
bool extMonFNAL.collimator1.alignmentPlug.visible = true;
bool extMonFNAL.collimator1.alignmentPlug.solid = false;
bool extMonFNAL.collimator1.channel.visible = true;
bool extMonFNAL.collimator1.channel.solid = false;

//----------------------------------------------------------------
// The filter magnet room.  "Length" is along beam dump Z.
//
double extMonFNAL.magnetRoomLength = 4200.;

// The magnet
vector<double> extMonFNAL.magnet.outerHalfSize = {95., 150., 1778. }; // mm
double extMonFNAL.magnet.apertureWidth  =  50.; // mm
double extMonFNAL.magnet.apertureHeight = 100.; // mm
string extMonFNAL.magnet.material  = "G4_Fe";
double extMonFNAL.magnet.fieldStrength = 0.222; // Tesla

bool extMonFNAL.magnet.iron.visible = true;
bool extMonFNAL.magnet.iron.solid = false;
bool extMonFNAL.magnet.aperture.visible = true;
bool extMonFNAL.magnet.aperture.solid = false;

// Along dump Z, the geometrical center of the magnet is placed at
double extMonFNAL.magnet.refDistanceToUpstreamWall = 2100;

// The magnet is placed in such a way that a positive particle with
// the nominal momentum given below, travelling at the bottom of
// collimator1 channel (at exit) parallel to the collimator1 axis,
// will enter the magnet aperture at the bottom and exit at at the
// bottom after being deflected by the magnetic field.
double extMonFNAL.nominalMomentum = 3000.; // MeV/c
// double extMonFNAL.maxG4StepLength = 10.; // mm

//----------------------------------------------------------------
// The second collimator

// The thickness of the shielding between magnet and detector rooms.
double         extMonFNAL.collimator2.shielding.thickness = 2000.;
double         extMonFNAL.collimator2.shielding.dumpXmin  = -2050.; // to outside the wall
double         extMonFNAL.collimator2.shielding.dumpXmax  = +2822.; // touch the wall

// the downstream half of the channel is wider
vector<double> extMonFNAL.collimator2.channelWidth  = {50., 75.};
vector<double> extMonFNAL.collimator2.channelHeigh  = {50., 75.};
// the alignment plug:
vector<double> extMonFNAL.collimator2.alignmentPlugRadius = { 100, 177.8  };
vector<double> extMonFNAL.collimator2.alignmentHoleRClearance = { 12.7, 12.7 };
double extMonFNAL.collimator2.radiusTransitiondZ = 0;

bool extMonFNAL.collimator2.alignmentHole.visible = true;
bool extMonFNAL.collimator2.alignmentHole.solid = false;
bool extMonFNAL.collimator2.alignmentPlug.visible = true;
bool extMonFNAL.collimator2.alignmentPlug.solid = false;
bool extMonFNAL.collimator2.channel.visible = true;
bool extMonFNAL.collimator2.channel.solid = false;

//================================================================
// Detector location in room: the center is on the continuation of
// collimator2 center line.  Need to specify just one additional parameter.
// We use the distance along the collimator2 axis between the
// wall (inside the room surface) and reference point of the detector.
double extMonFNAL.detectorDistanceToWall = 450;

// Details of the detector.  All of these vectors should be
// of the same size: one entry per detector plane.
// The coordinates are relative to the detector box volume.

vector<double> extMonFNAL.sensor_zoffset = {-300., -280., -50., +0, +220, +300.};
vector<double> extMonFNAL.sensor_xoffset = {0., 0., 0., 0., 0., 0.};
vector<double> extMonFNAL.sensor_yoffset = {0., 0., 0., 0., 0., 0. };

vector<double> extMonFNAL.sensor_halfdx =  { 20., 20., 20., 20., 20., 20.};
vector<double> extMonFNAL.sensor_halfdy =  { 20., 20., 20., 20., 20., 20.};
vector<double> extMonFNAL.sensor_halfdz =  { 0.2, 0.2, 0.2, 0.2, 0.2, 0.2};
vector<double> extMonFNAL.readout_halfdz = { 0.1, 0.1, 0.1, 0.1, 0.1, 0.1};

//----------------------------------------------------------------
// Place test materials behind the detector for MARS activation studies.

double extMonFNAL.testMaterial.distanceToDetector = 50; //mm
double extMonFNAL.testMaterial.halfsize = 40; // mm, transverse
double extMonFNAL.testMaterial.thickness = 2; // mm
double extMonFNAL.testMaterial.spacing = 8; // mm, between plates
vector<string> extMonFNAL.testMaterial.materials = { "G10", "G4_Cu", "G4_Si", "G4_Al", "Epotek301", "G4_KAPTON", "Polyethylene092", "StainlessSteel", "G4_WATER" };
bool   extMonFNAL.testMaterial.visible = true;
bool   extMonFNAL.testMaterial.solid = true;

// These are detector VDs (not filter ones)
//
// Notes:
//
//    - We want to be able to look at hits in an area larger than the
//      exact sensor size, so VD transverse dimensions are additional
//      parameters.
//
//    - Because GeometryService objects are supposed to contain only
//      "physical" parameters and VDs are virtual G4-only objects,
//      these sizes are not a part of the ExtMonFNAL object.
//
bool   extMonFNAL.vd.enabled = true;
double extMonFNAL.vd.halfdx = 100; // transverse size
double extMonFNAL.vd.halfdy = 100; // transverse size

//----------------------------------------------------------------
string         extMonFNAL.room.materialName  = "G4_AIR";
string         extMonFNAL.room.wall.materialName  = "ShieldingConcrete";

bool           extMonFNAL.room.visible   = false;
bool           extMonFNAL.room.solid     = false;

bool           extMonFNAL.room.wall.visible   = true;
bool           extMonFNAL.room.wall.solid     = false;

bool           extMonFNAL.room.ceiling.visible   = true;
bool           extMonFNAL.room.ceiling.solid     = false;

bool           extMonFNAL.room.floor.visible   = true;
bool           extMonFNAL.room.floor.solid     = true;

bool extMonFNAL.collimator2.shielding.visible = true;
bool extMonFNAL.collimator2.shielding.solid = false;

bool           extMonFNAL.detectorBoxVisible   = true;
bool           extMonFNAL.detectorBoxSolid     = false;
bool           extMonFNAL.detectorPlaneVisible   = true;
bool           extMonFNAL.detectorPlaneSolid     = true;

int            extMonFNAL.verbosityLevel = 2;
int            extMonFNAL.sd.verbosityLevel = 0;

// This tells emacs to view this file in c++ mode.
// Local Variables:
// mode:c++
// End:
