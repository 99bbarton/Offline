// Extinction monitor parameters
// 
// Andrei Gaponenko, 2011

bool           hasExtMonFNAL = true;

// Half lengths of the extmon.fnal room, in mm.
vector<double> extmon_fnal.roomHalfSize  = { 1000., 1500., 3000.};
// the room is adjacent to the proton beam dump box, and 
// is centered in the transverse horizontal direction along
// its plane of symmetry.  To fully specify the position 
// of the room we only need to constrain its vertical coordinate.
double         extmon_fnal.roomCenterHeightAboveDumpCore = 2500;

string         extmon_fnal.roomMaterialName  = "G4_AIR";
bool           extmon_fnal.boxVisible   = false;
bool           extmon_fnal.boxSolid     = false;
int            extmon_fnal.verbosityLevel = 0;
bool           extmon_fnal.roomVisible = true;

// detector location in room
vector<double> extmon_fnal.detectorCenterInRoom  = { 0., 0., 0.};
double         extmon_fnal.detectorRotationInRoomX       = 170; // degrees
double         extmon_fnal.detectorRotationInRoomY       = 0; // degrees

// Details of the detector.  All of these vectors should be
// of the same size: one entry per detector plane.
// The coordinates are relative to the detector box volume.

vector<double> extmon_fnal.sensor_zoffset = {-2000., -1800., +1800., +2000., +2200. };
vector<double> extmon_fnal.sensor_xoffset = {0., 0., 0., 0., 0.};
vector<double> extmon_fnal.sensor_yoffset = {0., 0., 0., 0., 0. };

// vector<double> extmon_fnal.sensor_halfdx = { 20., 20., 30., 30.};
// vector<double> extmon_fnal.sensor_halfdy = { 19., 19., 19., 19.};
// vector<double> extmon_fnal.sensor_halfdz = { 0.1, 0.1, 0.1, 0.1};
// vector<double> extmon_fnal.readout_halfdz = { 0.1, 0.1, 0.1, 0.1};

vector<double> extmon_fnal.sensor_halfdx = { 200., 200., 300., 300., 500.};
vector<double> extmon_fnal.sensor_halfdy = { 190., 190., 190., 190., 500.};
vector<double> extmon_fnal.sensor_halfdz = { 10, 10, 10, 10, 50};
vector<double> extmon_fnal.readout_halfdz = { 0.1, 0.1, 0.1, 0.1, 0.1};

//
// This tells emacs to view this file in c++ mode.
// Local Variables:
// mode:c++
// End:
