//
// Input file for the prototype conditions system.
//
// $Id: conditions_01.txt,v 1.23 2014/04/25 17:29:57 knoepfel Exp $
// $Author: knoepfel $
// $Date: 2014/04/25 17:29:57 $
//

// Times in ns
double DAQParams.t0 = 700.;

// Accelerator parameters
double acceleratorParams.deBuncherPeriod   = 1695. ; // ns
double acceleratorParams.intrinsicExt      = 1.64e-5; // S. Werkema, docdb-4044-v1
double acceleratorParams.limitingHalfWidth = 125.  ; // ns, "" 

string acceleratorParams.potPulse  = "ConditionsService/data/ProtonPulseSpectrum_03.txt";      
string acceleratorParams.acDipole  = "ConditionsService/data/ACdipoleTransmissionFunction_02.txt";

double MinDriftRadiusResolution = 0.1; // mm
double MaxDriftRadiusResolution = 0.1; // mm
double DriftRadiusResolutionRadius = 2.0; // mm
double DriftVelocity = 0.0625; // mm/nsec
//double DriftVelocity = 0.05; // mm/nsec

// uncoment to enable non "null operation" e2a conversion
// double EdepToAmpl = 1.0;
// double AmplRes    = 0.01;

double Crosstalk = 0.02;

// ExtMonFNAL clock timing.  1694/68 = 24.9118
int extMonFNAL.numClockTicksPerDebuncherPeriod = 68;

double extMonFNAL.temperature = 273; // Kelvin
double extMonFNAL.biasVoltage = -150; // Volts


//Calorimeter calibration information

// Longitudinal non-uniformity response, see Mu2e doc ... 
double CrystalNonUniformity_0 = 0.45;//% / cm
double CrystalNonUniformityErr_0 = 0.0;//% / cm

//non-linearity parameters, see Mu2e doc ...
double CrystalNonLinearity_0 = 10.35;
double CrystalNonLinearity_0Err = 0.0;
 
double CrystalNonLinearity_1 = 0.9919;
double CrystalNonLinearity_1Err = 0.0;

double CrystalNonLinearity_2 = 0.01812;
double CrystalNonLinearity_2Err = 0.0;

double CrystalNonLinearity_3 = 0.06654;
double CrystalNonLinearity_3Err = 0.0;

//APD photo-statistic number
double ROphotostatistic = 1660.0;//p.e / MeV
double ROphotostatisticErr = 224.0;//p.e / MeV
double ROfanoFactor = 1.3;

//value of the sigma used to do the Gaussian smearing due to the electronic noise
double ReadOutElectronicNoise      = 0.03;//MeV
double ReadOutElectronicNoiseSigma = 0.015;//MeV

// This tells emacs to view this file in c++ mode.
// Local Variables:
// mode:c++
// End:
