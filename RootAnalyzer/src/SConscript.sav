#
# $Id: SConscript.sav,v 1.2 2011/05/18 19:18:10 greenc Exp $
# $Author: greenc $
# $Date: 2011/05/18 19:18:10 $
#
# Original author Ron R.
#

#it should do:

"""
g++ -o Analyzer_C.o -c -g -rdynamic -fPIC -I../.. -I$ROOTSYS/include -I$FRAMEWORK_DIR -I$CLHEP_DIR/include -I$BOOST_INC Analyzer.C
g++ -o Analyzer_C.so -fPIC -shared Analyzer_C.o -L../../lib -L$FRAMEWORK_DIR/tmp/lib -L$BOOST_DIR/lib -L$CLHEP_DIR/lib `root-config --libs`
rootcint -f AnalyzerDict.C -c Analyzer.h
g++ -o AnalyzerDict_C.o -c -g -rdynamic -fPIC -I. -I$ROOTSYS/include AnalyzerDict.C
g++ -o AnalyzerDict_C.so -fPIC -shared AnalyzerDict_C.o  `root-config --libs`
"""
 

import os, re
Import('env')


action_ = 'rootcint -f $TARGET -c $SOURCE'

rootcint_bldr = Builder(action=action_)
env.Append(BUILDERS = {'RootcintSource' : rootcint_bldr},
           ENV = { 'ROOTSYS':os.environ['ROOTSYS']})

# last two components of the path. Ex: /not/this/but/THIS/AND_THIS
#                                      "AND_THIS" is usually "src"
dd=re.search('[^/]*/[^/]*$',env.Dir('.').abspath).group(0)  # THIS/AND_THIS
ff=os.path.dirname(dd)   # THIS

env.RootcintSource(['#/tmp/src/%s/AnalyzerDict.C'%(ff,)],['Analyzer.h'])

file=os.popen('root-config --libs')
ll = file.readlines()[0]  # first line is all we need
ll = ll[:-1]   # strip off new line
file.close()

my_lib=[]  # default if no cc_files
C_files = Glob('Analyzer.C',strings=True)
env.SharedLibrary('#/lib/Analyzer_C', C_files,
                  # common libs
                  LIBS=[ 'art_Framework_Core',
                         'art_Utilities',
                         'art_Framework_Services_Registry',
                         'CLHEP',
                         'Core',
                         ],
                  LINKFLAGS=ll.split(),
                  )

env.SharedLibrary( '#/lib/AnalyzerDict_C', '#/tmp/src/%s/AnalyzerDict.C'%(ff,),
                   # common libs
                   LIBS=[ 'art_Framework_Core',
                          'art_Utilities',
                          'art_Framework_Services_Registry',
                          'CLHEP',
                          'Core',
                          ],
                   LINKFLAGS=ll.split(),
                   )

# This tells emacs to view this file in python mode.
# Local Variables:
# mode:python
# End:
