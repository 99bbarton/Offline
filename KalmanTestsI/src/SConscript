#!/usr/bin/env python
#
#
# $Id: SConscript,v 1.5 2013/03/19 00:05:15 genser Exp $
# $Author: genser $
# $Date: 2013/03/19 00:05:15 $
#
# Original author Rob Kutschke.
#

import os, re
Import('env')

Import('mu2e_helper')

helper=mu2e_helper()

babarlibs = env['BABARLIBS']

g4inc   = os.environ['G4INCLUDE'] + '/Geant4'
g4lib   = os.environ['G4LIB']



mainlib = helper.make_mainlib ( [
    'art_Framework_Core',
    'art_Framework_Services_Optional_TFileService_service',
    babarlibs,
    'BaBar_DchGeom',
    'BaBar_DchGeomBase',
    'mu2e_GeometryService',
    'mu2e_ConditionsService',
    'mu2e_Mu2eUtilities',
    'mu2e_GeneralUtilities',
    'mu2e_MCDataProducts',
    'mu2e_RecoDataProducts',
    'CLHEP',
    'mu2e_KalmanTests'
    ],
                                [],[ '-L'+g4lib, '-I'+g4inc ]
                                )

helper.make_plugins( [
    mainlib,
    'art_Framework_Core',
    'art_Framework_Services_Optional_TFileService_service',
    babarlibs,
    'BaBar_DchGeom',
    'BaBar_DchGeomBase',
    'mu2e_GeometryService',
    'mu2e_ConditionsService',
    'mu2e_Mu2eUtilities',
    'mu2e_GeneralUtilities',
    'mu2e_MCDataProducts',
    'mu2e_RecoDataProducts',
    'CLHEP'
    ], [], [],[ '-I#/RecoDataProducts/inc/ -I#/MCDataProducts/inc/' ]
                     )


helper.make_dict_and_map( [
    mainlib,
    ] )


if os.environ.has_key('VGM_INSTALL'):
    vgmpath = os.environ['VGM_INSTALL']

    helper.make_plugin( 'GeomExport_module.cc', [
        mainlib,
        'art_Framework_Core',
        'mu2e_Mu2eUtilities',
        'mu2e_ConditionsService',
        'CLHEP',
        'Tree' ,
        'BaseVGM','Geant4GM','RootGM','ClhepVGM'
        ],
                        [ '-DUSE_VGM' ],
                        [ '-L'+g4lib, '-I'+g4inc, '-I'+vgmpath+'/include', '-L'+vgmpath+'/lib' ]
                        )



# This tells emacs to view this file in python mode.
# Local Variables:
# mode:python
# End:
