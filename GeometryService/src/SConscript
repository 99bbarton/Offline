#
# $Id: SConscript,v 1.16 2012/02/27 06:05:35 gandr Exp $
# $Author: gandr $
# $Date: 2012/02/27 06:05:35 $
#
# Original author Rob Kutschke.
#

import os.path
Import('env')

plugin_cc = Glob('*_module.cc', strings=True) + Glob('*_service.cc', strings=True) + Glob('*_source.cc', strings=True)
non_plugin_cc = Glob('*.cc',strings=True)
for cc in plugin_cc: non_plugin_cc.remove(cc)

libname='#/lib/GeometryService'

env._dict["LIBPATH"] += ['#/lib']
env.SharedLibrary(libname, non_plugin_cc,
        LIBS=[ 
               'BFieldGeom',
               'ExtinctionMonitorUCIGeom',
               'ExtinctionMonitorFNAL',
               'CosmicRayShieldGeom',
               'CalorimeterGeom',
               'LTrackerGeom',
               'TTrackerGeom',
               'ITrackerGeom',
               'TrackerGeom',
               'TargetGeom',
               'Mu2eBuildingGeom',
               'ProtonBeamDumpGeom',
               'ProductionTargetGeom',
               'BeamlineGeom',
               'Mu2eUtilities',
               'Mu2eInterfaces',
               'art_Framework_Core',
               'art_Framework_Services_Registry',
               'MF_MessageLogger',
               'fhiclcpp',
               'art_Utilities',
               'Core',
               'Hist',
               'Tree',
               'RIO',
               'Net',
               'Reflex',
               'Cintex',
             ],
)


libnm=os.path.basename(libname)
for cc in plugin_cc:
    libname='#/lib/'+cc[:cc.find('.cc')]
    env.SharedLibrary( libname, cc, LIBS=[ libnm ] )

# This tells emacs to view this file in python mode.
# Local Variables:
# mode:python
# End:
