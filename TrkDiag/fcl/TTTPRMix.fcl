# example script mixed TrkPatRec diagnostics on mixed input using the track trigger sequence
#include "fcl/minimalMessageService.fcl"
#include "fcl/standardProducers.fcl"
#include "fcl/standardServices.fcl"
#include "TrkDiag/fcl/prolog.fcl"
#include "bkgfiles.fcl"

process_name : TTTPRMix

source :
{
  module_type : RootInput
}

services :
{
  message : @local::default_message
  RandomNumberGenerator: { }
  GeometryService        : { inputFile : "Mu2eG4/test/geom_01.txt" }
  ConditionsService : { conditionsfile : "Mu2eG4/test/conditions_01.txt" }
  GlobalConstantsService : { inputFile : "Mu2eG4/test/globalConstants_01.txt" }
  BTrkHelper : @local::BTrkHelperDefault
  TFileService : { fileName : "TTTPRMix.root" }
  SeedService: @local::automaticSeeds
  TimeTracker : {}
}
physics :
{
  filters : {
    @table::EventMixing.filters
  }
  producers :
  {
    @table::EventMixing.producers
    @table::TrackerMC.producers
    @table::TrkHitReco.producers
    @table::Tracking.producers
    @table::Tracking.TrkTrigger.producers
   }
   
    analyzers :
  {
     @table::TrkDiag.analyzers
   }
}
physics.EndPath : [ TTCHD, TTTCD , TTHD]
physics.TrigPath: [ 
  @sequence::EventMixing.CD3Mixers,
  @sequence::EventMixing.TimeMaps,
  @sequence::TrackerMC.DigiSim,
  @sequence::TrkHitReco.TTprepareHits,
  @sequence::Tracking.TTfindHelices
]
#include "EventMixing/fcl/epilog.fcl"
# the following are needed for interactive running
services.SeedService.baseSeed         :  773651
services.SeedService.maxUniqueEngines :  20


