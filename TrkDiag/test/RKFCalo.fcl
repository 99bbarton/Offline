#
#  This script runs ReadKalFits diagnostics on a file of premade CD3 stage5 output file.
#
# David Brown, 21 June, 2016
#
#include "minimalMessageService.fcl"
#include "standardProducers.fcl"
#include "standardServices.fcl"
#include "TrkDiag/fcl/KalDiag.fcl"
#
#'patch' prolog which should be part of general infrastructure: FIXME!!
BEGIN_PROLOG
  pidPathBins: [ 0., 50., 100., 150., 200., 250., 300., 1.e12 ]
  CaloSim : {
    producers: {
      @table::CaloDigiMC.producers
    }
    MakeHits : [ @sequence::CaloDigiMC.DigiSim ]
  }
  CaloReco : {
    producers : {
	@table::CaloReco.producers
	@table::CaloCluster.producers
    }
    MakeClusters : [ @sequence::CaloReco.Reco, @table::CaloCluster.producers ]
  }
 END_PROLOG

source :
{
  module_type : RootInput
}

services :
{
  message : @local::default_message
  RandomNumberGenerator: { }
  GeometryService        : { inputFile : "Mu2eG4/test/geom_01.txt" }
  ConditionsService : { conditionsfile : "conditions_02.txt" }
  GlobalConstantsService : { inputFile : "Mu2eG4/test/globalConstants_01.txt" }
  BTrkHelper : @local::BTrkHelperDefault
  user :
  {
    SeedService: @local::automaticSeeds
  }
}
physics :
{
  producers :
  {
    @table::EventMixing.producers
    @table::Tracking.producers
    @table::CaloSim.producers
    @table::CaloReco.producers
    @table::TrackCaloMatching.producers
  }
  analyzers :
  {
      genCountLogger: { module_type: GenEventCountReader }
      RKFDeM: {
         module_type: ReadKalFits
	 fitterModuleLabel: TRFDeM
	 KalDiag : @local::KalDiagReadCD3 # configure KalDiag to read CD3 data files
	 PIDdt : {
	    signalHypothesis: {
	      inputFile: "ConditionsService/data/v5_7_2/pid_ele_dt.tbl"
	    }
	    backgroundHypothesis: {
	      inputFile: "ConditionsService/data/v5_7_2/pid_muo_dt.tbl"
	    }
	 }
	 PIDEp : {
	    signalHypothesis: {
	      inputFile: "ConditionsService/data/v5_7_2/pid_ele_ep_vs_path.tbl"
	      pathBinBoundaries: @local::pidPathBins
	    }
	    backgroundHypothesis: {
	      inputFile: "ConditionsService/data/v5_7_2/pid_muo_ep_vs_path.tbl"
	      pathBinBoundaries: @local::pidPathBins
	    }
	 }
      }
   }
}

services.TFileService : { fileName : "RKFCalo.root" }

physics.e2 : [RKFDeM, genCountLogger ]
physics.end_paths : [e2]
physics.p2: [ protonTimeMap, muonTimeMap,
@sequence::Tracking.DigiSim,
@sequence::CaloSim.MakeHits,
@sequence::CaloReco.MakeClusters,
@sequence::Tracking.TPRDeM,
@sequence::TrackCaloMatching.matching_dem ]
physics.trigger_paths  : [p2]

physics.analyzers.RKFDeM.eventWeightModules : [ ]
physics.analyzers.RKFDeM.KalDiag.diagLevel : 2
physics.analyzers.RKFDeM.addCalo : true
# TrkCaloIntersection by default looks for merged tracks
physics.producers.TrackCaloIntersectionDem.fitterModuleLabel : TRFDeM
physics.producers.TrackCaloMatchingDem.fitterModuleLabel : TRFDeM

# the following are needed for interactive running.  They will be overwritten if you submit this job
# on the grid with mu2eart and do not need to be removed.
services.SeedService.baseSeed         :  773651
services.SeedService.maxUniqueEngines :  20

