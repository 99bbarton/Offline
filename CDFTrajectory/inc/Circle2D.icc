//Constructors
Circle2D::Circle2D(double a,double phi0,double b) : _a(a),_phi0(phi0),_b(b) {}

// Access Parameters
double Circle2D::getA(void) const {return _a;}

double Circle2D::getB(void) const {return _b;}

double Circle2D::getPhi0(void) const {return _phi0;}

Circle2D::Circle2D(const Circle2D &right)
  : _phi0(right._phi0), _a(right._a), _b(right._b)
{}

// Points on the curve
double Circle2D::getPhiAtR(const Radius& rho) const {
  double sinphi = _a*rho + _b/rho;
  double phi = asin(sinphi);
  phi += _phi0;
  return phi;
}

double Circle2D::getPhiAtR(double rho) const {
  double sinphi = _a*rho + _b/rho;
  double phi = asin(sinphi);
  phi += _phi0;
  return phi;
}

unsigned int Circle2D::getParameterSpaceSize() { return _parameterSpaceSize; }

Circle2D Circle2D::create(const HepVector& v)
{
  return Circle2D(v(1),v(2),v(3));
}

// Memory
const Circle2D & Circle2D::operator=(const Circle2D &right) {
  if (this != &right) {
    _phi0=right._phi0;
    _a = right._a;
    _b = right._b;
  }
  return *this;
}

